//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.05.23 at 12:36:13 PM IDT 
//


package extensionTools.opl2.generated;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the extensionTools.opl2.generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends extensionTools.opl2.generated.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(169, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static extensionTools.opl2.generated.impl.runtime.GrammarInfo grammarInfo = new extensionTools.opl2.generated.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (extensionTools.opl2.generated.ObjectFactory.class));
    public final static java.lang.Class version = (extensionTools.opl2.generated.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((extensionTools.opl2.generated.ProcessAggregationSentenceSet.class), "extensionTools.opl2.generated.impl.ProcessAggregationSentenceSetImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectStateSentence.class), "extensionTools.opl2.generated.impl.ObjectStateSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInstanceSentence.class), "extensionTools.opl2.generated.impl.ObjectInstanceSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectEnvironmentalPhysicalSentenceType.class), "extensionTools.opl2.generated.impl.ObjectEnvironmentalPhysicalSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.Role.class), "extensionTools.opl2.generated.impl.RoleImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MaxTimeValue.class), "extensionTools.opl2.generated.impl.MaxTimeValueImpl");
        defaultImplementations.put((extensionTools.opl2.generated.GeneralEventSentenceType.class), "extensionTools.opl2.generated.impl.GeneralEventSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.SourceRoleType.class), "extensionTools.opl2.generated.impl.SourceRoleTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInstanceSentenceType.class), "extensionTools.opl2.generated.impl.ProcessInstanceSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ConsumptionSentence.class), "extensionTools.opl2.generated.impl.ConsumptionSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ChangingClause.class), "extensionTools.opl2.generated.impl.ChangingClauseImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ConsumptionSentenceType.class), "extensionTools.opl2.generated.impl.ConsumptionSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectUniDirectionalRelationSentenceType.class), "extensionTools.opl2.generated.impl.ObjectUniDirectionalRelationSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ResultSentence.class), "extensionTools.opl2.generated.impl.ResultSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MaxReactionTimeType.class), "extensionTools.opl2.generated.impl.MaxReactionTimeTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.EffectClauseType.class), "extensionTools.opl2.generated.impl.EffectClauseTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ConsumptionClause.class), "extensionTools.opl2.generated.impl.ConsumptionClauseImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessUniDirectionalRelationSentenceType.class), "extensionTools.opl2.generated.impl.ProcessUniDirectionalRelationSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ResultSentenceType.class), "extensionTools.opl2.generated.impl.ResultSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessExhibitionSentence.class), "extensionTools.opl2.generated.impl.ProcessExhibitionSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.OPLscriptType.class), "extensionTools.opl2.generated.impl.OPLscriptTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.RoleType.class), "extensionTools.opl2.generated.impl.RoleTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.InZoomedProcess.class), "extensionTools.opl2.generated.impl.InZoomedProcessImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MinReactionTimeType.class), "extensionTools.opl2.generated.impl.MinReactionTimeTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessExhibitionSentenceSetType.class), "extensionTools.opl2.generated.impl.ProcessExhibitionSentenceSetTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInvocationSentenceType.class), "extensionTools.opl2.generated.impl.ProcessInvocationSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MaxTimeoutValue.class), "extensionTools.opl2.generated.impl.MaxTimeoutValueImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessTimeoutSentenceType.class), "extensionTools.opl2.generated.impl.ProcessTimeoutSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MaxTimeValueType.class), "extensionTools.opl2.generated.impl.MaxTimeValueTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectAggregationSentenceType.class), "extensionTools.opl2.generated.impl.ObjectAggregationSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessAggregationSentenceType.class), "extensionTools.opl2.generated.impl.ProcessAggregationSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ThingSentenceSet.class), "extensionTools.opl2.generated.impl.ThingSentenceSetImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectIndexType.class), "extensionTools.opl2.generated.impl.ObjectIndexTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ConditionSentence.class), "extensionTools.opl2.generated.impl.ConditionSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.SourceRole.class), "extensionTools.opl2.generated.impl.SourceRoleImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInZoomingSentenceSet.class), "extensionTools.opl2.generated.impl.ProcessInZoomingSentenceSetImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInheritanceSentence.class), "extensionTools.opl2.generated.impl.ObjectInheritanceSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ExhibitedObjectType.class), "extensionTools.opl2.generated.impl.ExhibitedObjectTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.OperationType.class), "extensionTools.opl2.generated.impl.OperationTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.EffectClause.class), "extensionTools.opl2.generated.impl.EffectClauseImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectAggregationSentenceSet.class), "extensionTools.opl2.generated.impl.ObjectAggregationSentenceSetImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInheritanceSentenceType.class), "extensionTools.opl2.generated.impl.ProcessInheritanceSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.GeneralEventSentence.class), "extensionTools.opl2.generated.impl.GeneralEventSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInZoomingSentenceType.class), "extensionTools.opl2.generated.impl.ProcessInZoomingSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessEnvironmentalPhysicalSentenceType.class), "extensionTools.opl2.generated.impl.ProcessEnvironmentalPhysicalSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessBiDirectionalRelationSentenceType.class), "extensionTools.opl2.generated.impl.ProcessBiDirectionalRelationSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ConditionSentenceType.class), "extensionTools.opl2.generated.impl.ConditionSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.TriggeredProcessType.class), "extensionTools.opl2.generated.impl.TriggeredProcessTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInZoomingSentence.class), "extensionTools.opl2.generated.impl.ProcessInZoomingSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.OPLscript.class), "extensionTools.opl2.generated.impl.OPLscriptImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectExhibitionSentenceSetType.class), "extensionTools.opl2.generated.impl.ObjectExhibitionSentenceSetTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessUniDirectionalRelationSentence.class), "extensionTools.opl2.generated.impl.ProcessUniDirectionalRelationSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MinReactionTime.class), "extensionTools.opl2.generated.impl.MinReactionTimeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInstanceSentenceType.class), "extensionTools.opl2.generated.impl.ObjectInstanceSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectBiDirectionalRelationSentence.class), "extensionTools.opl2.generated.impl.ObjectBiDirectionalRelationSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessBiDirectionalRelationSentence.class), "extensionTools.opl2.generated.impl.ProcessBiDirectionalRelationSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.TimeValueType.class), "extensionTools.opl2.generated.impl.TimeValueTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ChangingSentence.class), "extensionTools.opl2.generated.impl.ChangingSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.InZoomedProcessType.class), "extensionTools.opl2.generated.impl.InZoomedProcessTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MaxReactionTime.class), "extensionTools.opl2.generated.impl.MaxReactionTimeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.StateClause.class), "extensionTools.opl2.generated.impl.StateClauseImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectExhibitionSentenceSet.class), "extensionTools.opl2.generated.impl.ObjectExhibitionSentenceSetImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ChangingSentenceType.class), "extensionTools.opl2.generated.impl.ChangingSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.EffectSentenceType.class), "extensionTools.opl2.generated.impl.EffectSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ConsumptionClauseType.class), "extensionTools.opl2.generated.impl.ConsumptionClauseTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessAggregationSentenceSetType.class), "extensionTools.opl2.generated.impl.ProcessAggregationSentenceSetTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectStateSentenceType.class), "extensionTools.opl2.generated.impl.ObjectStateSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInZoomingSentenceSetType.class), "extensionTools.opl2.generated.impl.ObjectInZoomingSentenceSetTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInheritanceSentenceSetType.class), "extensionTools.opl2.generated.impl.ProcessInheritanceSentenceSetTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInZoomingSentenceSet.class), "extensionTools.opl2.generated.impl.ObjectInZoomingSentenceSetImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInheritanceSentence.class), "extensionTools.opl2.generated.impl.ProcessInheritanceSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.InZoomedObjectType.class), "extensionTools.opl2.generated.impl.InZoomedObjectTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.StateClauseType.class), "extensionTools.opl2.generated.impl.StateClauseTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.AggregatedObject.class), "extensionTools.opl2.generated.impl.AggregatedObjectImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectBiDirectionalRelationSentenceType.class), "extensionTools.opl2.generated.impl.ObjectBiDirectionalRelationSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.EnablingSentence.class), "extensionTools.opl2.generated.impl.EnablingSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.TypeDeclarationSentenceType.class), "extensionTools.opl2.generated.impl.TypeDeclarationSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInheritanceSentenceType.class), "extensionTools.opl2.generated.impl.ObjectInheritanceSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ChangingClauseType.class), "extensionTools.opl2.generated.impl.ChangingClauseTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.EnablingSentenceType.class), "extensionTools.opl2.generated.impl.EnablingSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ResultClause.class), "extensionTools.opl2.generated.impl.ResultClauseImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectExhibitionSentenceType.class), "extensionTools.opl2.generated.impl.ObjectExhibitionSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInZoomingSentenceSetType.class), "extensionTools.opl2.generated.impl.ProcessInZoomingSentenceSetTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.DestinationRoleType.class), "extensionTools.opl2.generated.impl.DestinationRoleTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInvocationSentence.class), "extensionTools.opl2.generated.impl.ProcessInvocationSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInheritanceSentenceSet.class), "extensionTools.opl2.generated.impl.ProcessInheritanceSentenceSetImpl");
        defaultImplementations.put((extensionTools.opl2.generated.TriggeredProcess.class), "extensionTools.opl2.generated.impl.TriggeredProcessImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectUniDirectionalRelationSentence.class), "extensionTools.opl2.generated.impl.ObjectUniDirectionalRelationSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.StateEntranceSentence.class), "extensionTools.opl2.generated.impl.StateEntranceSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.AggregatedObjectType.class), "extensionTools.opl2.generated.impl.AggregatedObjectTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MaxTimeoutValueType.class), "extensionTools.opl2.generated.impl.MaxTimeoutValueTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectExhibitionSentence.class), "extensionTools.opl2.generated.impl.ObjectExhibitionSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectAggregationSentence.class), "extensionTools.opl2.generated.impl.ObjectAggregationSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessEnvironmentalPhysicalSentence.class), "extensionTools.opl2.generated.impl.ProcessEnvironmentalPhysicalSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessExhibitionSentenceType.class), "extensionTools.opl2.generated.impl.ProcessExhibitionSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.Operation.class), "extensionTools.opl2.generated.impl.OperationImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ThingSentenceSetType.class), "extensionTools.opl2.generated.impl.ThingSentenceSetTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.TimeValue.class), "extensionTools.opl2.generated.impl.TimeValueImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectIndex.class), "extensionTools.opl2.generated.impl.ObjectIndexImpl");
        defaultImplementations.put((extensionTools.opl2.generated.AgentSentenceType.class), "extensionTools.opl2.generated.impl.AgentSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.EnablingClauseType.class), "extensionTools.opl2.generated.impl.EnablingClauseTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.StateTimeoutSentenceType.class), "extensionTools.opl2.generated.impl.StateTimeoutSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.EnablingClause.class), "extensionTools.opl2.generated.impl.EnablingClauseImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ConditionClauseType.class), "extensionTools.opl2.generated.impl.ConditionClauseTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessTimeoutSentence.class), "extensionTools.opl2.generated.impl.ProcessTimeoutSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MinTimeValueType.class), "extensionTools.opl2.generated.impl.MinTimeValueTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.EffectSentence.class), "extensionTools.opl2.generated.impl.EffectSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.DestinationRole.class), "extensionTools.opl2.generated.impl.DestinationRoleImpl");
        defaultImplementations.put((extensionTools.opl2.generated.InZoomedObject.class), "extensionTools.opl2.generated.impl.InZoomedObjectImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessInstanceSentence.class), "extensionTools.opl2.generated.impl.ProcessInstanceSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInheritanceSentenceSetType.class), "extensionTools.opl2.generated.impl.ObjectInheritanceSentenceSetTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectEnvironmentalPhysicalSentence.class), "extensionTools.opl2.generated.impl.ObjectEnvironmentalPhysicalSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.StateEntranceSentenceType.class), "extensionTools.opl2.generated.impl.StateEntranceSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInZoomingSentenceType.class), "extensionTools.opl2.generated.impl.ObjectInZoomingSentenceTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.TypeDeclarationSentence.class), "extensionTools.opl2.generated.impl.TypeDeclarationSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.MinTimeValue.class), "extensionTools.opl2.generated.impl.MinTimeValueImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInZoomingSentence.class), "extensionTools.opl2.generated.impl.ObjectInZoomingSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ResultClauseType.class), "extensionTools.opl2.generated.impl.ResultClauseTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.AgentSentence.class), "extensionTools.opl2.generated.impl.AgentSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ConditionClause.class), "extensionTools.opl2.generated.impl.ConditionClauseImpl");
        defaultImplementations.put((extensionTools.opl2.generated.StateTimeoutSentence.class), "extensionTools.opl2.generated.impl.StateTimeoutSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessAggregationSentence.class), "extensionTools.opl2.generated.impl.ProcessAggregationSentenceImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectAggregationSentenceSetType.class), "extensionTools.opl2.generated.impl.ObjectAggregationSentenceSetTypeImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ExhibitedObject.class), "extensionTools.opl2.generated.impl.ExhibitedObjectImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ProcessExhibitionSentenceSet.class), "extensionTools.opl2.generated.impl.ProcessExhibitionSentenceSetImpl");
        defaultImplementations.put((extensionTools.opl2.generated.ObjectInheritanceSentenceSet.class), "extensionTools.opl2.generated.impl.ObjectInheritanceSentenceSetImpl");
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectInstanceSentence"), (extensionTools.opl2.generated.ObjectInstanceSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "MaxReactionTime"), (extensionTools.opl2.generated.MaxReactionTime.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "GeneralEventSentence"), (extensionTools.opl2.generated.GeneralEventSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "EffectClause"), (extensionTools.opl2.generated.EffectClause.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectBiDirectionalRelationSentence"), (extensionTools.opl2.generated.ObjectBiDirectionalRelationSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectEnvironmentalPhysicalSentence"), (extensionTools.opl2.generated.ObjectEnvironmentalPhysicalSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "EnablingClause"), (extensionTools.opl2.generated.EnablingClause.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectStateSentence"), (extensionTools.opl2.generated.ObjectStateSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "MaxTimeValue"), (extensionTools.opl2.generated.MaxTimeValue.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectAggregationSentence"), (extensionTools.opl2.generated.ObjectAggregationSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessInvocationSentence"), (extensionTools.opl2.generated.ProcessInvocationSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessAggregationSentenceSet"), (extensionTools.opl2.generated.ProcessAggregationSentenceSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "InZoomedProcess"), (extensionTools.opl2.generated.InZoomedProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessInstanceSentence"), (extensionTools.opl2.generated.ProcessInstanceSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectAggregationSentenceSet"), (extensionTools.opl2.generated.ObjectAggregationSentenceSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "MaxTimeoutValue"), (extensionTools.opl2.generated.MaxTimeoutValue.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ConsumptionSentence"), (extensionTools.opl2.generated.ConsumptionSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessInheritanceSentenceSet"), (extensionTools.opl2.generated.ProcessInheritanceSentenceSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessInheritanceSentence"), (extensionTools.opl2.generated.ProcessInheritanceSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "OPLscript"), (extensionTools.opl2.generated.OPLscript.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectInheritanceSentenceSet"), (extensionTools.opl2.generated.ObjectInheritanceSentenceSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "StateEntranceSentence"), (extensionTools.opl2.generated.StateEntranceSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ResultSentence"), (extensionTools.opl2.generated.ResultSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "Operation"), (extensionTools.opl2.generated.Operation.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "StateTimeoutSentence"), (extensionTools.opl2.generated.StateTimeoutSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "EffectSentence"), (extensionTools.opl2.generated.EffectSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessExhibitionSentenceSet"), (extensionTools.opl2.generated.ProcessExhibitionSentenceSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "EnablingSentence"), (extensionTools.opl2.generated.EnablingSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "Role"), (extensionTools.opl2.generated.Role.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessExhibitionSentence"), (extensionTools.opl2.generated.ProcessExhibitionSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectUniDirectionalRelationSentence"), (extensionTools.opl2.generated.ObjectUniDirectionalRelationSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessInZoomingSentence"), (extensionTools.opl2.generated.ProcessInZoomingSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "AggregatedObject"), (extensionTools.opl2.generated.AggregatedObject.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessBiDirectionalRelationSentence"), (extensionTools.opl2.generated.ProcessBiDirectionalRelationSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "InZoomedObject"), (extensionTools.opl2.generated.InZoomedObject.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ChangingClause"), (extensionTools.opl2.generated.ChangingClause.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectInheritanceSentence"), (extensionTools.opl2.generated.ObjectInheritanceSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectIndex"), (extensionTools.opl2.generated.ObjectIndex.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectExhibitionSentenceSet"), (extensionTools.opl2.generated.ObjectExhibitionSentenceSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ConditionClause"), (extensionTools.opl2.generated.ConditionClause.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessTimeoutSentence"), (extensionTools.opl2.generated.ProcessTimeoutSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessUniDirectionalRelationSentence"), (extensionTools.opl2.generated.ProcessUniDirectionalRelationSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "TypeDeclarationSentence"), (extensionTools.opl2.generated.TypeDeclarationSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectInZoomingSentence"), (extensionTools.opl2.generated.ObjectInZoomingSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ThingSentenceSet"), (extensionTools.opl2.generated.ThingSentenceSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectInZoomingSentenceSet"), (extensionTools.opl2.generated.ObjectInZoomingSentenceSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ConditionSentence"), (extensionTools.opl2.generated.ConditionSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessEnvironmentalPhysicalSentence"), (extensionTools.opl2.generated.ProcessEnvironmentalPhysicalSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ChangingSentence"), (extensionTools.opl2.generated.ChangingSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "TimeValue"), (extensionTools.opl2.generated.TimeValue.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "SourceRole"), (extensionTools.opl2.generated.SourceRole.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "TriggeredProcess"), (extensionTools.opl2.generated.TriggeredProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessAggregationSentence"), (extensionTools.opl2.generated.ProcessAggregationSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "MinReactionTime"), (extensionTools.opl2.generated.MinReactionTime.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ResultClause"), (extensionTools.opl2.generated.ResultClause.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ExhibitedObject"), (extensionTools.opl2.generated.ExhibitedObject.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ProcessInZoomingSentenceSet"), (extensionTools.opl2.generated.ProcessInZoomingSentenceSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "MinTimeValue"), (extensionTools.opl2.generated.MinTimeValue.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ConsumptionClause"), (extensionTools.opl2.generated.ConsumptionClause.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "AgentSentence"), (extensionTools.opl2.generated.AgentSentence.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "DestinationRole"), (extensionTools.opl2.generated.DestinationRole.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "StateClause"), (extensionTools.opl2.generated.StateClause.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ObjectExhibitionSentence"), (extensionTools.opl2.generated.ObjectExhibitionSentence.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: extensionTools.opl2.generated
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of ProcessAggregationSentenceSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessAggregationSentenceSet createProcessAggregationSentenceSet()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessAggregationSentenceSetImpl();
    }

    /**
     * Create an instance of ObjectStateSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectStateSentence createObjectStateSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectStateSentenceImpl();
    }

    /**
     * Create an instance of ObjectInstanceSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInstanceSentence createObjectInstanceSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInstanceSentenceImpl();
    }

    /**
     * Create an instance of ObjectEnvironmentalPhysicalSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectEnvironmentalPhysicalSentenceType createObjectEnvironmentalPhysicalSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectEnvironmentalPhysicalSentenceTypeImpl();
    }

    /**
     * Create an instance of Role
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.Role createRole()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.RoleImpl();
    }

    /**
     * Create an instance of MaxTimeValue
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MaxTimeValue createMaxTimeValue()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MaxTimeValueImpl();
    }

    /**
     * Create an instance of GeneralEventSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.GeneralEventSentenceType createGeneralEventSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.GeneralEventSentenceTypeImpl();
    }

    /**
     * Create an instance of SourceRoleType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.SourceRoleType createSourceRoleType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.SourceRoleTypeImpl();
    }

    /**
     * Create an instance of ProcessInstanceSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInstanceSentenceType createProcessInstanceSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInstanceSentenceTypeImpl();
    }

    /**
     * Create an instance of ConsumptionSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ConsumptionSentence createConsumptionSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ConsumptionSentenceImpl();
    }

    /**
     * Create an instance of ChangingClause
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ChangingClause createChangingClause()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ChangingClauseImpl();
    }

    /**
     * Create an instance of ConsumptionSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ConsumptionSentenceType createConsumptionSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ConsumptionSentenceTypeImpl();
    }

    /**
     * Create an instance of ObjectUniDirectionalRelationSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectUniDirectionalRelationSentenceType createObjectUniDirectionalRelationSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectUniDirectionalRelationSentenceTypeImpl();
    }

    /**
     * Create an instance of ResultSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ResultSentence createResultSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ResultSentenceImpl();
    }

    /**
     * Create an instance of MaxReactionTimeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MaxReactionTimeType createMaxReactionTimeType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MaxReactionTimeTypeImpl();
    }

    /**
     * Create an instance of EffectClauseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.EffectClauseType createEffectClauseType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.EffectClauseTypeImpl();
    }

    /**
     * Create an instance of ConsumptionClause
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ConsumptionClause createConsumptionClause()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ConsumptionClauseImpl();
    }

    /**
     * Create an instance of ProcessUniDirectionalRelationSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessUniDirectionalRelationSentenceType createProcessUniDirectionalRelationSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessUniDirectionalRelationSentenceTypeImpl();
    }

    /**
     * Create an instance of ResultSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ResultSentenceType createResultSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ResultSentenceTypeImpl();
    }

    /**
     * Create an instance of ProcessExhibitionSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessExhibitionSentence createProcessExhibitionSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessExhibitionSentenceImpl();
    }

    /**
     * Create an instance of OPLscriptType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.OPLscriptType createOPLscriptType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.OPLscriptTypeImpl();
    }

    /**
     * Create an instance of RoleType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.RoleType createRoleType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.RoleTypeImpl();
    }

    /**
     * Create an instance of InZoomedProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.InZoomedProcess createInZoomedProcess()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.InZoomedProcessImpl();
    }

    /**
     * Create an instance of MinReactionTimeType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MinReactionTimeType createMinReactionTimeType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MinReactionTimeTypeImpl();
    }

    /**
     * Create an instance of ProcessExhibitionSentenceSetType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessExhibitionSentenceSetType createProcessExhibitionSentenceSetType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessExhibitionSentenceSetTypeImpl();
    }

    /**
     * Create an instance of ProcessInvocationSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInvocationSentenceType createProcessInvocationSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInvocationSentenceTypeImpl();
    }

    /**
     * Create an instance of MaxTimeoutValue
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MaxTimeoutValue createMaxTimeoutValue()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MaxTimeoutValueImpl();
    }

    /**
     * Create an instance of ProcessTimeoutSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessTimeoutSentenceType createProcessTimeoutSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessTimeoutSentenceTypeImpl();
    }

    /**
     * Create an instance of MaxTimeValueType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MaxTimeValueType createMaxTimeValueType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MaxTimeValueTypeImpl();
    }

    /**
     * Create an instance of ObjectAggregationSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectAggregationSentenceType createObjectAggregationSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectAggregationSentenceTypeImpl();
    }

    /**
     * Create an instance of ProcessAggregationSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessAggregationSentenceType createProcessAggregationSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessAggregationSentenceTypeImpl();
    }

    /**
     * Create an instance of ThingSentenceSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ThingSentenceSet createThingSentenceSet()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ThingSentenceSetImpl();
    }

    /**
     * Create an instance of ObjectIndexType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectIndexType createObjectIndexType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectIndexTypeImpl();
    }

    /**
     * Create an instance of ConditionSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ConditionSentence createConditionSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ConditionSentenceImpl();
    }

    /**
     * Create an instance of SourceRole
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.SourceRole createSourceRole()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.SourceRoleImpl();
    }

    /**
     * Create an instance of ProcessInZoomingSentenceSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInZoomingSentenceSet createProcessInZoomingSentenceSet()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInZoomingSentenceSetImpl();
    }

    /**
     * Create an instance of ObjectInheritanceSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInheritanceSentence createObjectInheritanceSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInheritanceSentenceImpl();
    }

    /**
     * Create an instance of ExhibitedObjectType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ExhibitedObjectType createExhibitedObjectType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ExhibitedObjectTypeImpl();
    }

    /**
     * Create an instance of OperationType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.OperationType createOperationType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.OperationTypeImpl();
    }

    /**
     * Create an instance of EffectClause
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.EffectClause createEffectClause()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.EffectClauseImpl();
    }

    /**
     * Create an instance of ObjectAggregationSentenceSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectAggregationSentenceSet createObjectAggregationSentenceSet()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectAggregationSentenceSetImpl();
    }

    /**
     * Create an instance of ProcessInheritanceSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInheritanceSentenceType createProcessInheritanceSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInheritanceSentenceTypeImpl();
    }

    /**
     * Create an instance of GeneralEventSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.GeneralEventSentence createGeneralEventSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.GeneralEventSentenceImpl();
    }

    /**
     * Create an instance of ProcessInZoomingSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInZoomingSentenceType createProcessInZoomingSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInZoomingSentenceTypeImpl();
    }

    /**
     * Create an instance of ProcessEnvironmentalPhysicalSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessEnvironmentalPhysicalSentenceType createProcessEnvironmentalPhysicalSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessEnvironmentalPhysicalSentenceTypeImpl();
    }

    /**
     * Create an instance of ProcessBiDirectionalRelationSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessBiDirectionalRelationSentenceType createProcessBiDirectionalRelationSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessBiDirectionalRelationSentenceTypeImpl();
    }

    /**
     * Create an instance of ConditionSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ConditionSentenceType createConditionSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ConditionSentenceTypeImpl();
    }

    /**
     * Create an instance of TriggeredProcessType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.TriggeredProcessType createTriggeredProcessType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.TriggeredProcessTypeImpl();
    }

    /**
     * Create an instance of ProcessInZoomingSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInZoomingSentence createProcessInZoomingSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInZoomingSentenceImpl();
    }

    /**
     * Create an instance of OPLscript
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.OPLscript createOPLscript()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.OPLscriptImpl();
    }

    /**
     * Create an instance of ObjectExhibitionSentenceSetType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectExhibitionSentenceSetType createObjectExhibitionSentenceSetType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectExhibitionSentenceSetTypeImpl();
    }

    /**
     * Create an instance of ProcessUniDirectionalRelationSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessUniDirectionalRelationSentence createProcessUniDirectionalRelationSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessUniDirectionalRelationSentenceImpl();
    }

    /**
     * Create an instance of MinReactionTime
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MinReactionTime createMinReactionTime()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MinReactionTimeImpl();
    }

    /**
     * Create an instance of ObjectInstanceSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInstanceSentenceType createObjectInstanceSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInstanceSentenceTypeImpl();
    }

    /**
     * Create an instance of ObjectBiDirectionalRelationSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectBiDirectionalRelationSentence createObjectBiDirectionalRelationSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectBiDirectionalRelationSentenceImpl();
    }

    /**
     * Create an instance of ProcessBiDirectionalRelationSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessBiDirectionalRelationSentence createProcessBiDirectionalRelationSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessBiDirectionalRelationSentenceImpl();
    }

    /**
     * Create an instance of TimeValueType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.TimeValueType createTimeValueType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.TimeValueTypeImpl();
    }

    /**
     * Create an instance of ChangingSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ChangingSentence createChangingSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ChangingSentenceImpl();
    }

    /**
     * Create an instance of InZoomedProcessType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.InZoomedProcessType createInZoomedProcessType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.InZoomedProcessTypeImpl();
    }

    /**
     * Create an instance of MaxReactionTime
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MaxReactionTime createMaxReactionTime()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MaxReactionTimeImpl();
    }

    /**
     * Create an instance of StateClause
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.StateClause createStateClause()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.StateClauseImpl();
    }

    /**
     * Create an instance of ObjectExhibitionSentenceSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectExhibitionSentenceSet createObjectExhibitionSentenceSet()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectExhibitionSentenceSetImpl();
    }

    /**
     * Create an instance of ChangingSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ChangingSentenceType createChangingSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ChangingSentenceTypeImpl();
    }

    /**
     * Create an instance of EffectSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.EffectSentenceType createEffectSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.EffectSentenceTypeImpl();
    }

    /**
     * Create an instance of ConsumptionClauseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ConsumptionClauseType createConsumptionClauseType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ConsumptionClauseTypeImpl();
    }

    /**
     * Create an instance of ProcessAggregationSentenceSetType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessAggregationSentenceSetType createProcessAggregationSentenceSetType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessAggregationSentenceSetTypeImpl();
    }

    /**
     * Create an instance of ObjectStateSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectStateSentenceType createObjectStateSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectStateSentenceTypeImpl();
    }

    /**
     * Create an instance of ObjectInZoomingSentenceSetType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInZoomingSentenceSetType createObjectInZoomingSentenceSetType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInZoomingSentenceSetTypeImpl();
    }

    /**
     * Create an instance of ProcessInheritanceSentenceSetType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInheritanceSentenceSetType createProcessInheritanceSentenceSetType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInheritanceSentenceSetTypeImpl();
    }

    /**
     * Create an instance of ObjectInZoomingSentenceSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInZoomingSentenceSet createObjectInZoomingSentenceSet()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInZoomingSentenceSetImpl();
    }

    /**
     * Create an instance of ProcessInheritanceSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInheritanceSentence createProcessInheritanceSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInheritanceSentenceImpl();
    }

    /**
     * Create an instance of InZoomedObjectType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.InZoomedObjectType createInZoomedObjectType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.InZoomedObjectTypeImpl();
    }

    /**
     * Create an instance of StateClauseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.StateClauseType createStateClauseType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.StateClauseTypeImpl();
    }

    /**
     * Create an instance of AggregatedObject
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.AggregatedObject createAggregatedObject()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.AggregatedObjectImpl();
    }

    /**
     * Create an instance of ObjectBiDirectionalRelationSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectBiDirectionalRelationSentenceType createObjectBiDirectionalRelationSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectBiDirectionalRelationSentenceTypeImpl();
    }

    /**
     * Create an instance of EnablingSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.EnablingSentence createEnablingSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.EnablingSentenceImpl();
    }

    /**
     * Create an instance of TypeDeclarationSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.TypeDeclarationSentenceType createTypeDeclarationSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.TypeDeclarationSentenceTypeImpl();
    }

    /**
     * Create an instance of ObjectInheritanceSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInheritanceSentenceType createObjectInheritanceSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInheritanceSentenceTypeImpl();
    }

    /**
     * Create an instance of ChangingClauseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ChangingClauseType createChangingClauseType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ChangingClauseTypeImpl();
    }

    /**
     * Create an instance of EnablingSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.EnablingSentenceType createEnablingSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.EnablingSentenceTypeImpl();
    }

    /**
     * Create an instance of ResultClause
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ResultClause createResultClause()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ResultClauseImpl();
    }

    /**
     * Create an instance of ObjectExhibitionSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectExhibitionSentenceType createObjectExhibitionSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectExhibitionSentenceTypeImpl();
    }

    /**
     * Create an instance of ProcessInZoomingSentenceSetType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInZoomingSentenceSetType createProcessInZoomingSentenceSetType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInZoomingSentenceSetTypeImpl();
    }

    /**
     * Create an instance of DestinationRoleType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.DestinationRoleType createDestinationRoleType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.DestinationRoleTypeImpl();
    }

    /**
     * Create an instance of ProcessInvocationSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInvocationSentence createProcessInvocationSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInvocationSentenceImpl();
    }

    /**
     * Create an instance of ProcessInheritanceSentenceSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInheritanceSentenceSet createProcessInheritanceSentenceSet()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInheritanceSentenceSetImpl();
    }

    /**
     * Create an instance of TriggeredProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.TriggeredProcess createTriggeredProcess()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.TriggeredProcessImpl();
    }

    /**
     * Create an instance of ObjectUniDirectionalRelationSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectUniDirectionalRelationSentence createObjectUniDirectionalRelationSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectUniDirectionalRelationSentenceImpl();
    }

    /**
     * Create an instance of StateEntranceSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.StateEntranceSentence createStateEntranceSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.StateEntranceSentenceImpl();
    }

    /**
     * Create an instance of AggregatedObjectType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.AggregatedObjectType createAggregatedObjectType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.AggregatedObjectTypeImpl();
    }

    /**
     * Create an instance of MaxTimeoutValueType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MaxTimeoutValueType createMaxTimeoutValueType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MaxTimeoutValueTypeImpl();
    }

    /**
     * Create an instance of ObjectExhibitionSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectExhibitionSentence createObjectExhibitionSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectExhibitionSentenceImpl();
    }

    /**
     * Create an instance of ObjectAggregationSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectAggregationSentence createObjectAggregationSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectAggregationSentenceImpl();
    }

    /**
     * Create an instance of ProcessEnvironmentalPhysicalSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessEnvironmentalPhysicalSentence createProcessEnvironmentalPhysicalSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessEnvironmentalPhysicalSentenceImpl();
    }

    /**
     * Create an instance of ProcessExhibitionSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessExhibitionSentenceType createProcessExhibitionSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessExhibitionSentenceTypeImpl();
    }

    /**
     * Create an instance of Operation
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.Operation createOperation()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.OperationImpl();
    }

    /**
     * Create an instance of ThingSentenceSetType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ThingSentenceSetType createThingSentenceSetType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ThingSentenceSetTypeImpl();
    }

    /**
     * Create an instance of TimeValue
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.TimeValue createTimeValue()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.TimeValueImpl();
    }

    /**
     * Create an instance of ObjectIndex
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectIndex createObjectIndex()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectIndexImpl();
    }

    /**
     * Create an instance of AgentSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.AgentSentenceType createAgentSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.AgentSentenceTypeImpl();
    }

    /**
     * Create an instance of EnablingClauseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.EnablingClauseType createEnablingClauseType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.EnablingClauseTypeImpl();
    }

    /**
     * Create an instance of StateTimeoutSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.StateTimeoutSentenceType createStateTimeoutSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.StateTimeoutSentenceTypeImpl();
    }

    /**
     * Create an instance of EnablingClause
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.EnablingClause createEnablingClause()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.EnablingClauseImpl();
    }

    /**
     * Create an instance of ConditionClauseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ConditionClauseType createConditionClauseType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ConditionClauseTypeImpl();
    }

    /**
     * Create an instance of ProcessTimeoutSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessTimeoutSentence createProcessTimeoutSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessTimeoutSentenceImpl();
    }

    /**
     * Create an instance of MinTimeValueType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MinTimeValueType createMinTimeValueType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MinTimeValueTypeImpl();
    }

    /**
     * Create an instance of EffectSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.EffectSentence createEffectSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.EffectSentenceImpl();
    }

    /**
     * Create an instance of DestinationRole
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.DestinationRole createDestinationRole()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.DestinationRoleImpl();
    }

    /**
     * Create an instance of InZoomedObject
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.InZoomedObject createInZoomedObject()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.InZoomedObjectImpl();
    }

    /**
     * Create an instance of ProcessInstanceSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessInstanceSentence createProcessInstanceSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessInstanceSentenceImpl();
    }

    /**
     * Create an instance of ObjectInheritanceSentenceSetType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInheritanceSentenceSetType createObjectInheritanceSentenceSetType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInheritanceSentenceSetTypeImpl();
    }

    /**
     * Create an instance of ObjectEnvironmentalPhysicalSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectEnvironmentalPhysicalSentence createObjectEnvironmentalPhysicalSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectEnvironmentalPhysicalSentenceImpl();
    }

    /**
     * Create an instance of StateEntranceSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.StateEntranceSentenceType createStateEntranceSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.StateEntranceSentenceTypeImpl();
    }

    /**
     * Create an instance of ObjectInZoomingSentenceType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInZoomingSentenceType createObjectInZoomingSentenceType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInZoomingSentenceTypeImpl();
    }

    /**
     * Create an instance of TypeDeclarationSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.TypeDeclarationSentence createTypeDeclarationSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.TypeDeclarationSentenceImpl();
    }

    /**
     * Create an instance of MinTimeValue
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.MinTimeValue createMinTimeValue()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.MinTimeValueImpl();
    }

    /**
     * Create an instance of ObjectInZoomingSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInZoomingSentence createObjectInZoomingSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInZoomingSentenceImpl();
    }

    /**
     * Create an instance of ResultClauseType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ResultClauseType createResultClauseType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ResultClauseTypeImpl();
    }

    /**
     * Create an instance of AgentSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.AgentSentence createAgentSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.AgentSentenceImpl();
    }

    /**
     * Create an instance of ConditionClause
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ConditionClause createConditionClause()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ConditionClauseImpl();
    }

    /**
     * Create an instance of StateTimeoutSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.StateTimeoutSentence createStateTimeoutSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.StateTimeoutSentenceImpl();
    }

    /**
     * Create an instance of ProcessAggregationSentence
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessAggregationSentence createProcessAggregationSentence()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessAggregationSentenceImpl();
    }

    /**
     * Create an instance of ObjectAggregationSentenceSetType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectAggregationSentenceSetType createObjectAggregationSentenceSetType()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectAggregationSentenceSetTypeImpl();
    }

    /**
     * Create an instance of ExhibitedObject
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ExhibitedObject createExhibitedObject()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ExhibitedObjectImpl();
    }

    /**
     * Create an instance of ProcessExhibitionSentenceSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ProcessExhibitionSentenceSet createProcessExhibitionSentenceSet()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ProcessExhibitionSentenceSetImpl();
    }

    /**
     * Create an instance of ObjectInheritanceSentenceSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public extensionTools.opl2.generated.ObjectInheritanceSentenceSet createObjectInheritanceSentenceSet()
        throws javax.xml.bind.JAXBException
    {
        return new extensionTools.opl2.generated.impl.ObjectInheritanceSentenceSetImpl();
    }

}
