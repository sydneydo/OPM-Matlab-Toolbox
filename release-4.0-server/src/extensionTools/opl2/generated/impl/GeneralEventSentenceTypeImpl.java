//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.05.23 at 12:36:13 PM IDT 
//


package extensionTools.opl2.generated.impl;

public class GeneralEventSentenceTypeImpl implements extensionTools.opl2.generated.GeneralEventSentenceType, com.sun.xml.bind.JAXBObject, extensionTools.opl2.generated.impl.runtime.UnmarshallableObject, extensionTools.opl2.generated.impl.runtime.XMLSerializable, extensionTools.opl2.generated.impl.runtime.ValidatableObject
{

    protected extensionTools.opl2.generated.MaxReactionTimeType _MaxReactionTime;
    protected boolean has_IsObjectWithStates;
    protected boolean _IsObjectWithStates;
    protected extensionTools.opl2.generated.MinReactionTimeType _MinReactionTime;
    protected com.sun.xml.bind.util.ListImpl _TriggeredProcessName;
    protected com.sun.xml.bind.util.ListImpl _Role;
    protected java.lang.String _ObjectName;
    protected java.lang.String _LogicalRelation;
    protected com.sun.xml.bind.util.ListImpl _PathLabel;
    public final static java.lang.Class version = (extensionTools.opl2.generated.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    public extensionTools.opl2.generated.MaxReactionTimeType getMaxReactionTime() {
        return this._MaxReactionTime;
    }

    public void setMaxReactionTime(extensionTools.opl2.generated.MaxReactionTimeType value) {
        this._MaxReactionTime = value;
    }

    public boolean isIsObjectWithStates() {
        return this._IsObjectWithStates;
    }

    public void setIsObjectWithStates(boolean value) {
        this._IsObjectWithStates = value;
        this.has_IsObjectWithStates = true;
    }

    public extensionTools.opl2.generated.MinReactionTimeType getMinReactionTime() {
        return this._MinReactionTime;
    }

    public void setMinReactionTime(extensionTools.opl2.generated.MinReactionTimeType value) {
        this._MinReactionTime = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getTriggeredProcessName() {
        if (this._TriggeredProcessName == null) {
            this._TriggeredProcessName = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return this._TriggeredProcessName;
    }

    public java.util.List getTriggeredProcessName() {
        return this._getTriggeredProcessName();
    }

    protected com.sun.xml.bind.util.ListImpl _getRole() {
        if (this._Role == null) {
            this._Role = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return this._Role;
    }

    public java.util.List getRole() {
        return this._getRole();
    }

    public java.lang.String getObjectName() {
        return this._ObjectName;
    }

    public void setObjectName(java.lang.String value) {
        this._ObjectName = value;
    }

    public java.lang.String getLogicalRelation() {
        return this._LogicalRelation;
    }

    public void setLogicalRelation(java.lang.String value) {
        this._LogicalRelation = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getPathLabel() {
        if (this._PathLabel == null) {
            this._PathLabel = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return this._PathLabel;
    }

    public java.util.List getPathLabel() {
        return this._getPathLabel();
    }

    public extensionTools.opl2.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(extensionTools.opl2.generated.impl.runtime.UnmarshallingContext context) {
        return new extensionTools.opl2.generated.impl.GeneralEventSentenceTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(extensionTools.opl2.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!this.has_IsObjectWithStates) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsObjectWithStates"));
        }
        int idx4 = 0;
        final int len4 = ((this._TriggeredProcessName == null)? 0 :this._TriggeredProcessName.size());
        int idx5 = 0;
        final int len5 = ((this._Role == null)? 0 :this._Role.size());
        int idx8 = 0;
        final int len8 = ((this._PathLabel == null)? 0 :this._PathLabel.size());
        context.startElement("", "ObjectName");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) this._ObjectName), "ObjectName");
        } catch (java.lang.Exception e) {
            extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx5 != len5) {
            if (this._Role.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) this._Role.get(idx5 ++)), "Role");
            } else {
                context.startElement("", "Role");
                int idx_2 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) this._Role.get(idx_2 ++)), "Role");
                context.endNamespaceDecls();
                int idx_3 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) this._Role.get(idx_3 ++)), "Role");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) this._Role.get(idx5 ++)), "Role");
                context.endElement();
            }
        }
        context.startElement("", "IsObjectWithStates");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) this._IsObjectWithStates)), "IsObjectWithStates");
        } catch (java.lang.Exception e) {
            extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "LogicalRelation");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) this._LogicalRelation), "LogicalRelation");
        } catch (java.lang.Exception e) {
            extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx4 != len4) {
            context.startElement("", "TriggeredProcessName");
            int idx_8 = idx4;
            try {
                idx_8 += 1;
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_9 = idx4;
            try {
                idx_9 += 1;
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) this._TriggeredProcessName.get(idx4 ++)), "TriggeredProcessName");
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx8 != len8) {
            context.startElement("", "PathLabel");
            int idx_10 = idx8;
            try {
                idx_10 += 1;
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_11 = idx8;
            try {
                idx_11 += 1;
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) this._PathLabel.get(idx8 ++)), "PathLabel");
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (this._MinReactionTime!= null) {
            if (this._MinReactionTime instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) this._MinReactionTime), "MinReactionTime");
            } else {
                context.startElement("", "MinReactionTime");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) this._MinReactionTime), "MinReactionTime");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) this._MinReactionTime), "MinReactionTime");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) this._MinReactionTime), "MinReactionTime");
                context.endElement();
            }
        }
        if (this._MaxReactionTime!= null) {
            if (this._MaxReactionTime instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) this._MaxReactionTime), "MaxReactionTime");
            } else {
                context.startElement("", "MaxReactionTime");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) this._MaxReactionTime), "MaxReactionTime");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) this._MaxReactionTime), "MaxReactionTime");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) this._MaxReactionTime), "MaxReactionTime");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(extensionTools.opl2.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!this.has_IsObjectWithStates) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsObjectWithStates"));
        }
        int idx4 = 0;
        final int len4 = ((this._TriggeredProcessName == null)? 0 :this._TriggeredProcessName.size());
        int idx5 = 0;
        final int len5 = ((this._Role == null)? 0 :this._Role.size());
        int idx8 = 0;
        final int len8 = ((this._PathLabel == null)? 0 :this._PathLabel.size());
        while (idx5 != len5) {
            if (this._Role.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) this._Role.get(idx5 ++)), "Role");
            } else {
                idx5 += 1;
            }
        }
        while (idx4 != len4) {
            try {
                idx4 += 1;
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx8 != len8) {
            try {
                idx8 += 1;
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        if (this._MinReactionTime!= null) {
            if (this._MinReactionTime instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) this._MinReactionTime), "MinReactionTime");
            }
        }
        if (this._MaxReactionTime!= null) {
            if (this._MaxReactionTime instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) this._MaxReactionTime), "MaxReactionTime");
            }
        }
    }

    public void serializeURIs(extensionTools.opl2.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!this.has_IsObjectWithStates) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsObjectWithStates"));
        }
        int idx4 = 0;
        final int len4 = ((this._TriggeredProcessName == null)? 0 :this._TriggeredProcessName.size());
        int idx5 = 0;
        final int len5 = ((this._Role == null)? 0 :this._Role.size());
        int idx8 = 0;
        final int len8 = ((this._PathLabel == null)? 0 :this._PathLabel.size());
        while (idx5 != len5) {
            if (this._Role.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) this._Role.get(idx5 ++)), "Role");
            } else {
                idx5 += 1;
            }
        }
        while (idx4 != len4) {
            try {
                idx4 += 1;
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx8 != len8) {
            try {
                idx8 += 1;
            } catch (java.lang.Exception e) {
                extensionTools.opl2.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        if (this._MinReactionTime!= null) {
            if (this._MinReactionTime instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) this._MinReactionTime), "MinReactionTime");
            }
        }
        if (this._MaxReactionTime!= null) {
            if (this._MaxReactionTime instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) this._MaxReactionTime), "MaxReactionTime");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (extensionTools.opl2.generated.GeneralEventSentenceType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
+"msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
+"esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.gramm"
+"ar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;"
+"L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003p"
+"psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwa"
+"ysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'"
+"com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespa"
+"ceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lc"
+"om/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www."
+"w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.W"
+"hiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.gram"
+"mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.s"
+"un.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespa"
+"ceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\rxq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080"
+"\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0011ppsr\u0000\"com.sun.msv.datatype.xsd.Qnam"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0005QNamesr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000\"sq\u0000~\u0000#"
+"q\u0000~\u0000.q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar"
+".NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLS"
+"chema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000)\u0001psq\u0000~\u00002t\u0000\nObjectNamet\u0000\u0000sq\u0000~\u0000%p"
+"psr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun."
+"msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000*psq\u0000~\u0000%"
+"q\u0000~\u0000*psq\u0000~\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000%ppsq\u0000~\u0000>q\u0000~\u0000*psq\u0000~\u0000\'q\u0000~\u0000*psr\u00002com.s"
+"un.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003q\u0000~\u00009psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"3q\u0000~\u00008sq\u0000~\u00002t\u0000\"extensionTools.opl2.generated.Rolet\u0000+http://j"
+"ava.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\fpp\u0000sq\u0000~\u0000%ppsq\u0000~\u0000>q\u0000~\u0000*psq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u00008sq\u0000~\u00002t\u0000"
+"&extensionTools.opl2.generated.RoleTypeq\u0000~\u0000Lsq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000"
+"~\u0000*pq\u0000~\u0000+q\u0000~\u00004q\u0000~\u00008sq\u0000~\u00002t\u0000\u0004Roleq\u0000~\u0000<q\u0000~\u00008sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000\u0011ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0016q\u0000~\u0000\u001ct\u0000\u0007booleanq\u0000~\u00000q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000^q\u0000~\u0000\u001csq\u0000~\u0000%ppsq\u0000~\u0000\'q"
+"\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00004q\u0000~\u00008sq\u0000~\u00002t\u0000\u0012IsObjectWithStatesq\u0000~\u0000<sq\u0000~\u0000\fpp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0014sq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00004q\u0000~\u00008sq\u0000~\u00002t\u0000\u000fLo"
+"gicalRelationq\u0000~\u0000<sq\u0000~\u0000>ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0014sq\u0000~\u0000%ppsq\u0000~"
+"\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00004q\u0000~\u00008sq\u0000~\u00002t\u0000\u0014TriggeredProcessNameq\u0000~\u0000<sq\u0000"
+"~\u0000%ppsq\u0000~\u0000>q\u0000~\u0000*psq\u0000~\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0014sq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~"
+"\u0000*pq\u0000~\u0000+q\u0000~\u00004q\u0000~\u00008sq\u0000~\u00002t\u0000\tPathLabelq\u0000~\u0000<q\u0000~\u00008sq\u0000~\u0000%ppsq\u0000~\u0000%"
+"q\u0000~\u0000*psq\u0000~\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000%ppsq\u0000~\u0000>q\u0000~\u0000*psq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000Gq\u0000~\u0000"
+"Iq\u0000~\u00008sq\u0000~\u00002t\u0000-extensionTools.opl2.generated.MinReactionTime"
+"q\u0000~\u0000Lsq\u0000~\u0000\fq\u0000~\u0000*p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000%ppsq\u0000~\u0000>q\u0000~\u0000*psq\u0000~\u0000"
+"\'q\u0000~\u0000*pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u00008sq\u0000~\u00002t\u00001extensionTools.opl2.generated"
+".MinReactionTimeTypeq\u0000~\u0000Lsq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00004q\u0000~\u00008"
+"sq\u0000~\u00002t\u0000\u000fMinReactionTimeq\u0000~\u0000<q\u0000~\u00008sq\u0000~\u0000%ppsq\u0000~\u0000%q\u0000~\u0000*psq\u0000~\u0000\f"
+"q\u0000~\u0000*p\u0000sq\u0000~\u0000%ppsq\u0000~\u0000>q\u0000~\u0000*psq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u00008sq\u0000~\u00002"
+"t\u0000-extensionTools.opl2.generated.MaxReactionTimeq\u0000~\u0000Lsq\u0000~\u0000\fq"
+"\u0000~\u0000*p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000%ppsq\u0000~\u0000>q\u0000~\u0000*psq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000G"
+"q\u0000~\u0000Iq\u0000~\u00008sq\u0000~\u00002t\u00001extensionTools.opl2.generated.MaxReaction"
+"TimeTypeq\u0000~\u0000Lsq\u0000~\u0000%ppsq\u0000~\u0000\'q\u0000~\u0000*pq\u0000~\u0000+q\u0000~\u00004q\u0000~\u00008sq\u0000~\u00002t\u0000\u000fMax"
+"ReactionTimeq\u0000~\u0000<q\u0000~\u00008sr\u0000\"com.sun.msv.grammar.ExpressionPool"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool"
+"$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedH"
+"ash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/m"
+"sv/grammar/ExpressionPool;xp\u0000\u0000\u0000-\u0001pq\u0000~\u0000Aq\u0000~\u0000zq\u0000~\u0000\u008eq\u0000~\u0000&q\u0000~\u0000Uq"
+"\u0000~\u0000`q\u0000~\u0000fq\u0000~\u0000mq\u0000~\u0000jq\u0000~\u0000Zq\u0000~\u0000uq\u0000~\u0000rq\u0000~\u0000\u0089q\u0000~\u0000\u009dq\u0000~\u0000qq\u0000~\u0000Nq\u0000~\u0000\u0082q"
+"\u0000~\u0000\u0096q\u0000~\u0000=q\u0000~\u0000\bq\u0000~\u0000\u0007q\u0000~\u0000\u0010q\u0000~\u0000eq\u0000~\u0000lq\u0000~\u0000tq\u0000~\u0000\u000bq\u0000~\u0000@q\u0000~\u0000Dq\u0000~\u0000Qq"
+"\u0000~\u0000}q\u0000~\u0000\u0085q\u0000~\u0000\u0091q\u0000~\u0000\nq\u0000~\u0000\u0099q\u0000~\u0000\tq\u0000~\u0000Cq\u0000~\u0000Pq\u0000~\u0000|q\u0000~\u0000\u0084q\u0000~\u0000\u0090q\u0000~\u0000\u0098q"
+"\u0000~\u0000yq\u0000~\u0000\u008dq\u0000~\u0000\u0006q\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends extensionTools.opl2.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(extensionTools.opl2.generated.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------");
        }

        protected Unmarshaller(extensionTools.opl2.generated.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            this.state = startState;
        }

        public java.lang.Object owner() {
            return extensionTools.opl2.generated.impl.GeneralEventSentenceTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (this.state) {
                    case  10 :
                        if (("TriggeredProcessName" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, true);
                            this.state = 11;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Role" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._getRole().add(((extensionTools.opl2.generated.impl.RoleImpl) this.spawnChildFromEnterElement((extensionTools.opl2.generated.impl.RoleImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Role" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, false);
                            this.state = 23;
                            return ;
                        }
                        this.state = 4;
                        continue outer;
                    case  13 :
                        if (("TriggeredProcessName" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, true);
                            this.state = 11;
                            return ;
                        }
                        if (("PathLabel" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, true);
                            this.state = 14;
                            return ;
                        }
                        this.state = 16;
                        continue outer;
                    case  7 :
                        if (("LogicalRelation" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, true);
                            this.state = 8;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("Role" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._getRole().add(((extensionTools.opl2.generated.impl.RoleImpl) this.spawnChildFromEnterElement((extensionTools.opl2.generated.impl.RoleImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Role" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, false);
                            this.state = 23;
                            return ;
                        }
                        if (("IsObjectWithStates" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, true);
                            this.state = 5;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("TimeValue" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._MinReactionTime = ((extensionTools.opl2.generated.impl.MinReactionTimeTypeImpl) this.spawnChildFromEnterElement((extensionTools.opl2.generated.impl.MinReactionTimeTypeImpl.class), 22, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TimeValue" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._MinReactionTime = ((extensionTools.opl2.generated.impl.MinReactionTimeTypeImpl) this.spawnChildFromEnterElement((extensionTools.opl2.generated.impl.MinReactionTimeTypeImpl.class), 22, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  17 :
                        if (("MaxReactionTime" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._MaxReactionTime = ((extensionTools.opl2.generated.impl.MaxReactionTimeImpl) this.spawnChildFromEnterElement((extensionTools.opl2.generated.impl.MaxReactionTimeImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MaxReactionTime" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, false);
                            this.state = 19;
                            return ;
                        }
                        this.state = 18;
                        continue outer;
                    case  19 :
                        if (("TimeValue" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._MaxReactionTime = ((extensionTools.opl2.generated.impl.MaxReactionTimeTypeImpl) this.spawnChildFromEnterElement((extensionTools.opl2.generated.impl.MaxReactionTimeTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TimeValue" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._MaxReactionTime = ((extensionTools.opl2.generated.impl.MaxReactionTimeTypeImpl) this.spawnChildFromEnterElement((extensionTools.opl2.generated.impl.MaxReactionTimeTypeImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("ObjectName" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, true);
                            this.state = 1;
                            return ;
                        }
                        break;
                    case  16 :
                        if (("PathLabel" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, true);
                            this.state = 14;
                            return ;
                        }
                        if (("MinReactionTime" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._MinReactionTime = ((extensionTools.opl2.generated.impl.MinReactionTimeImpl) this.spawnChildFromEnterElement((extensionTools.opl2.generated.impl.MinReactionTimeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MinReactionTime" == ___local)&&("" == ___uri)) {
                            this.context.pushAttributes(__atts, false);
                            this.state = 21;
                            return ;
                        }
                        this.state = 17;
                        continue outer;
                    case  18 :
                        this.revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  23 :
                        attIdx = this.context.getAttribute("", "Library");
                        if (attIdx >= 0) {
                            this.context.consumeAttribute(attIdx);
                            this.context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = this.context.getAttribute("", "RoleName");
                        if (attIdx >= 0) {
                            this.context.consumeAttribute(attIdx);
                            this.context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (this.state) {
                    case  22 :
                        if (("MinReactionTime" == ___local)&&("" == ___uri)) {
                            this.context.popAttributes();
                            this.state = 17;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("MaxReactionTime" == ___local)&&("" == ___uri)) {
                            this.context.popAttributes();
                            this.state = 18;
                            return ;
                        }
                        break;
                    case  3 :
                        this.state = 4;
                        continue outer;
                    case  13 :
                        this.state = 16;
                        continue outer;
                    case  24 :
                        if (("Role" == ___local)&&("" == ___uri)) {
                            this.context.popAttributes();
                            this.state = 4;
                            return ;
                        }
                        break;
                    case  17 :
                        this.state = 18;
                        continue outer;
                    case  12 :
                        if (("TriggeredProcessName" == ___local)&&("" == ___uri)) {
                            this.context.popAttributes();
                            this.state = 13;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("PathLabel" == ___local)&&("" == ___uri)) {
                            this.context.popAttributes();
                            this.state = 16;
                            return ;
                        }
                        break;
                    case  16 :
                        this.state = 17;
                        continue outer;
                    case  9 :
                        if (("LogicalRelation" == ___local)&&("" == ___uri)) {
                            this.context.popAttributes();
                            this.state = 10;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("IsObjectWithStates" == ___local)&&("" == ___uri)) {
                            this.context.popAttributes();
                            this.state = 7;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("ObjectName" == ___local)&&("" == ___uri)) {
                            this.context.popAttributes();
                            this.state = 3;
                            return ;
                        }
                        break;
                    case  18 :
                        this.revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  23 :
                        attIdx = this.context.getAttribute("", "Library");
                        if (attIdx >= 0) {
                            this.context.consumeAttribute(attIdx);
                            this.context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = this.context.getAttribute("", "RoleName");
                        if (attIdx >= 0) {
                            this.context.consumeAttribute(attIdx);
                            this.context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            outer:
            while (true) {
                switch (this.state) {
                    case  3 :
                        this.state = 4;
                        continue outer;
                    case  13 :
                        this.state = 16;
                        continue outer;
                    case  17 :
                        this.state = 18;
                        continue outer;
                    case  16 :
                        this.state = 17;
                        continue outer;
                    case  18 :
                        this.revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  23 :
                        if (("Library" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._getRole().add(((extensionTools.opl2.generated.impl.RoleTypeImpl) this.spawnChildFromEnterAttribute((extensionTools.opl2.generated.impl.RoleTypeImpl.class), 24, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("RoleName" == ___local)&&("" == ___uri)) {
                            GeneralEventSentenceTypeImpl.this._getRole().add(((extensionTools.opl2.generated.impl.RoleTypeImpl) this.spawnChildFromEnterAttribute((extensionTools.opl2.generated.impl.RoleTypeImpl.class), 24, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (this.state) {
                    case  3 :
                        this.state = 4;
                        continue outer;
                    case  13 :
                        this.state = 16;
                        continue outer;
                    case  17 :
                        this.state = 18;
                        continue outer;
                    case  16 :
                        this.state = 17;
                        continue outer;
                    case  18 :
                        this.revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  23 :
                        attIdx = this.context.getAttribute("", "Library");
                        if (attIdx >= 0) {
                            this.context.consumeAttribute(attIdx);
                            this.context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = this.context.getAttribute("", "RoleName");
                        if (attIdx >= 0) {
                            this.context.consumeAttribute(attIdx);
                            this.context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (this.state) {
                        case  8 :
                            this.state = 9;
                            this.eatText1(value);
                            return ;
                        case  14 :
                            this.state = 15;
                            this.eatText2(value);
                            return ;
                        case  1 :
                            this.state = 2;
                            this.eatText3(value);
                            return ;
                        case  3 :
                            this.state = 4;
                            continue outer;
                        case  13 :
                            this.state = 16;
                            continue outer;
                        case  17 :
                            this.state = 18;
                            continue outer;
                        case  11 :
                            this.state = 12;
                            this.eatText4(value);
                            return ;
                        case  16 :
                            this.state = 17;
                            continue outer;
                        case  18 :
                            this.revertToParentFromText(value);
                            return ;
                        case  5 :
                            this.state = 6;
                            this.eatText5(value);
                            return ;
                        case  23 :
                            attIdx = this.context.getAttribute("", "Library");
                            if (attIdx >= 0) {
                                this.context.consumeAttribute(attIdx);
                                this.context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = this.context.getAttribute("", "RoleName");
                            if (attIdx >= 0) {
                                this.context.consumeAttribute(attIdx);
                                this.context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    this.handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                GeneralEventSentenceTypeImpl.this._LogicalRelation = value;
            } catch (java.lang.Exception e) {
                this.handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                GeneralEventSentenceTypeImpl.this._getPathLabel().add(value);
            } catch (java.lang.Exception e) {
                this.handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                GeneralEventSentenceTypeImpl.this._ObjectName = value;
            } catch (java.lang.Exception e) {
                this.handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                GeneralEventSentenceTypeImpl.this._getTriggeredProcessName().add(value);
            } catch (java.lang.Exception e) {
                this.handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                GeneralEventSentenceTypeImpl.this._IsObjectWithStates = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                GeneralEventSentenceTypeImpl.this.has_IsObjectWithStates = true;
            } catch (java.lang.Exception e) {
                this.handleParseConversionException(e);
            }
        }

    }

}
