/* Generated By:JavaCC: Do not edit this line. OplParserTokenManager.java */
package extensionTools.opltoopd;

public class OplParserTokenManager implements OplParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x20000000c00L) != 0L || (active1 & 0x1400000000000L) != 0L)
         {
            jjmatchedKind = 57;
            return 519;
         }
         if ((active0 & 0x3ca003c00000L) != 0L || (active1 & 0x945014605419000aL) != 0L || (active2 & 0x1L) != 0L)
            return 322;
         if ((active1 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 55;
            return 40;
         }
         if ((active0 & 0x8000040L) != 0L)
         {
            jjmatchedKind = 55;
            return 87;
         }
         if ((active0 & 0x60000000L) != 0L || (active1 & 0x2800000000000L) != 0L)
         {
            jjmatchedKind = 57;
            return 498;
         }
         if ((active0 & 0x1001b10000020L) != 0L || (active1 & 0x2000210000220020L) != 0L)
            return 520;
         if ((active0 & 0x40044001c0000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 55;
            return 122;
         }
         if ((active0 & 0x2000080000000L) != 0L || (active1 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 55;
            return 12;
         }
         if ((active0 & 0x6000L) != 0L)
         {
            jjmatchedKind = 55;
            return 54;
         }
         if ((active0 & 0xc10000039380L) != 0L || (active1 & 0x5600L) != 0L)
         {
            jjmatchedKind = 55;
            return 520;
         }
         if ((active1 & 0x4000000000000000L) != 0L)
         {
            jjmatchedKind = 55;
            return 103;
         }
         return -1;
      case 1:
         if ((active0 & 0x20000000c00L) != 0L || (active1 & 0x3400000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return 519;
         }
         if ((active1 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return 11;
         }
         if ((active0 & 0x800000L) != 0L || (active1 & 0x8400000000000002L) != 0L || (active2 & 0x1L) != 0L)
            return 321;
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 0;
            }
            return 499;
         }
         if ((active0 & 0xc00000000000L) != 0L)
            return 520;
         if ((active0 & 0x40000000L) != 0L || (active1 & 0x800000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return 501;
         }
         if ((active0 & 0x80000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return 121;
         }
         if ((active0 & 0x201139803f3e0L) != 0L || (active1 & 0x6000088000205600L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return 520;
         }
         if ((active0 & 0x200000000000L) != 0L || (active1 & 0x80000L) != 0L)
            return 474;
         if ((active0 & 0x4004400140000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return 131;
         }
         return -1;
      case 2:
         if ((active0 & 0x20103880bf3c0L) != 0L || (active1 & 0x4000000000005600L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return 520;
         }
         if ((active1 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return 281;
         }
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x20000000c00L) != 0L || (active1 & 0x1400000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 2;
            }
            return 519;
         }
         if ((active0 & 0x800000L) != 0L || (active1 & 0x8400000000000002L) != 0L)
            return 320;
         if ((active0 & 0x20L) != 0L || (active1 & 0x200000L) != 0L)
            return 520;
         if ((active1 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return 521;
         }
         if ((active0 & 0x40000000L) != 0L || (active1 & 0x800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return 502;
         }
         if ((active0 & 0x4004400140000L) != 0L)
            return 130;
         return -1;
      case 3:
         if ((active0 & 0xf000L) != 0L)
            return 520;
         if ((active1 & 0x2800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0xc00L) != 0L || (active1 & 0x400000000000L) != 0L)
            return 519;
         if ((active0 & 0x100880b03c0L) != 0L || (active1 & 0x4000000800005600L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 3;
            }
            return 520;
         }
         if ((active0 & 0x20000000000L) != 0L || (active1 & 0x1000000000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 3;
            }
            return 519;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x800000L) != 0L || (active1 & 0x8400000000000002L) != 0L)
            return 319;
         return -1;
      case 4:
         if ((active1 & 0x400000000000L) != 0L)
            return 281;
         if ((active0 & 0x100880b03c0L) != 0L || (active1 & 0x4000000800005600L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return 520;
         }
         if ((active1 & 0x2800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x20000000000L) != 0L || (active1 & 0x1000000000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 4;
            }
            return 519;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 5:
         if ((active0 & 0x100880b03c0L) != 0L || (active1 & 0x4000000800000000L) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 5;
            }
            return 520;
         }
         if ((active1 & 0x2800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x20000000000L) != 0L || (active1 & 0x1000000000000L) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 5;
            }
            return 519;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 6:
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x20000000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 6;
            }
            return 519;
         }
         if ((active1 & 0x4000000000000000L) != 0L)
         {
            if (jjmatchedPos < 5)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 5;
            }
            return -1;
         }
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active1 & 0x2800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x8000040L) != 0L)
            return 520;
         if ((active0 & 0x100800b0380L) != 0L || (active1 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 6;
            }
            return 520;
         }
         if ((active1 & 0x1000000000000L) != 0L)
         {
            if (jjmatchedPos < 5)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 5;
            }
            return -1;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         return -1;
      case 7:
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x300L) != 0L)
         {
            if (jjmatchedPos < 6)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 6;
            }
            return -1;
         }
         if ((active1 & 0x4000000000000000L) != 0L)
         {
            if (jjmatchedPos < 5)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 5;
            }
            return -1;
         }
         if ((active0 & 0x20000000000L) != 0L)
         {
            if (jjmatchedPos != 7)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 7;
            }
            return 519;
         }
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active1 & 0x2800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x30080L) != 0L)
            return 520;
         if ((active0 & 0x10080080000L) != 0L)
         {
            if (jjmatchedPos != 7)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 7;
            }
            return 520;
         }
         if ((active1 & 0x1000000000000L) != 0L)
         {
            if (jjmatchedPos < 5)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 5;
            }
            return -1;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         return -1;
      case 8:
         if ((active0 & 0x20000000000L) != 0L)
            return 281;
         if ((active1 & 0x2800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x80080000L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 7;
            }
            return -1;
         }
         if ((active0 & 0x300L) != 0L)
         {
            if (jjmatchedPos < 6)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 6;
            }
            return -1;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 9:
         if ((active1 & 0x2800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x80080000L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 7;
            }
            return -1;
         }
         if ((active0 & 0x300L) != 0L)
         {
            if (jjmatchedPos < 6)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 6;
            }
            return -1;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 10:
         if ((active1 & 0x2800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x80080000L) != 0L)
         {
            if (jjmatchedPos < 7)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 7;
            }
            return -1;
         }
         if ((active0 & 0x200L) != 0L)
         {
            if (jjmatchedPos < 6)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 6;
            }
            return -1;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 11:
         if ((active1 & 0x2800000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 12:
         if ((active1 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 57;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         if ((active0 & 0x10000000L) != 0L || (active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 13:
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x300000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         return -1;
      case 14:
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x200000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         return -1;
      case 15:
         if ((active1 & 0x5600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         if ((active0 & 0x200000000L) != 0L)
         {
            if (jjmatchedPos < 2)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 2;
            }
            return -1;
         }
         return -1;
      case 16:
         if ((active1 & 0x4600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 17:
         if ((active1 & 0x4600L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 18:
         if ((active1 & 0x4200L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active1 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      case 19:
         if ((active1 & 0x4200L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         return -1;
      case 20:
         if ((active1 & 0x200L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         return -1;
      case 21:
         if ((active1 & 0x200L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 4;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 32:
         jjmatchedKind = 37;
         return jjMoveStringLiteralDfa1_0(0x3c8003c00000L, 0x945014605419000aL, 0x1L);
      case 44:
         jjmatchedKind = 68;
         return jjMoveStringLiteralDfa1_0(0x4200000L, 0xbac0217abc4a9c4L, 0x0L);
      case 46:
         return jjStopAtPos(0, 64);
      case 65:
         return jjMoveStringLiteralDfa1_0(0x60000000L, 0x2800000000000L, 0x0L);
      case 77:
         return jjMoveStringLiteralDfa1_0(0x400L, 0x400000000000L, 0x0L);
      case 79:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L, 0x0L);
      case 80:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000000000000L, 0x0L);
      case 90:
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L, 0x0L);
      case 97:
         jjmatchedKind = 35;
         return jjMoveStringLiteralDfa1_0(0x1001310000020L, 0x2000210000220020L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x2000080000000L, 0x800000000L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x30000L, 0x0L, 0x0L);
      case 104:
         return jjMoveStringLiteralDfa1_0(0x8000040L, 0x0L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x40044001c0000L, 0x80000000000L, 0x0L);
      case 109:
         return jjMoveStringLiteralDfa1_0(0x6000L, 0x0L, 0x0L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0xc10000000000L, 0x0L, 0x0L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4000000000000000L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x380L, 0x0L, 0x0L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x8000000000L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x5600L, 0x0L);
      case 122:
         return jjMoveStringLiteralDfa1_0(0x9000L, 0x0L, 0x0L);
      default :
         return jjMoveNfa_0(9, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1, long active2)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1, active2);
      return 1;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 48;
            jjmatchedPos = 1;
         }
         else if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x24200000L, active1, 0xbac2217abc6a984L, active2, 0L);
      case 44:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000000020L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000a006440L, active1, 0x1040400000100000L, active2, 0L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0x8L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x9b80L, active1, 0L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000000000L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000L, active1, 0x800005600L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0x8400000000000002L, active2, 0x1L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4001100000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x1040080020L, active1, 0x2000800000200000L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x200080000000L, active1, 0x8000080000L, active2, 0L);
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x30000000000L, active1, 0L, active2, 0L);
      case 114:
         if ((active0 & 0x400000000000L) != 0L)
         {
            jjmatchedKind = 46;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x840300000000L, active1, 0x10000000000000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0x4004400140000L, active1, 0L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x80010000000L, active1, 0x2084000000000L, active2, 0L);
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0x40054000000L, active2, 0L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x30000L, active1, 0L, active2, 0L);
      case 121:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000000L, active1, 0L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(0, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1, active2);
      return 2;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x40000L) != 0L)
         {
            jjmatchedKind = 18;
            jjmatchedPos = 2;
         }
         else if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(2, 29);
         else if ((active0 & 0x1000000000L) != 0L)
         {
            jjmatchedKind = 36;
            jjmatchedPos = 2;
         }
         else if ((active0 & 0x800000000000L) != 0L)
            return jjStopAtPos(2, 47);
         else if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 2;
         }
         else if ((active1 & 0x8000000000L) != 0L)
            return jjStopAtPos(2, 103);
         return jjMoveStringLiteralDfa3_0(active0, 0x4004450100000L, active1, 0x2002890000000000L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000L, active1, 0x920100900400008L, active2, 0L);
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x480080004L, active2, 0L);
      case 100:
         if ((active0 & 0x20L) != 0L)
         {
            jjmatchedKind = 5;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x40300000000L, active1, 0x10000000000000L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000L, active1, 0x1000000000L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x4430000L, active1, 0x40054000000L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000L, active1, 0x28000000000d600L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x300L, active1, 0x200000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000088006440L, active1, 0x400000100000L, active2, 0x1L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000L, active1, 0x4000040000L, active2, 0L);
      case 113:
         return jjMoveStringLiteralDfa3_0(active0, 0x80L, active1, 0L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x280000009800L, active1, 0x1048002000800000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x880000L, active1, 0x8400000000000002L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0x30000000000L, active1, 0x4000001000000L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4001000000000000L, active2, 0L);
      case 119:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000L, active1, 0x2002a002980L, active2, 0L);
      case 121:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200010000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(1, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1, active2);
      return 3;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(3, 30);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(3, 45);
         else if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(3, 49);
         else if ((active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 3;
         }
         else if ((active1 & 0x200000L) != 0L)
            return jjStopAtPos(3, 85);
         else if ((active1 & 0x4000000000L) != 0L)
            return jjStopAtPos(3, 102);
         return jjMoveStringLiteralDfa4_0(active0, 0x300800000L, active1, 0x8400000000010000L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x4004404100300L, active1, 0x210000000004L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0xc5600L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000040L, active1, 0x100000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000L, active1, 0x1048040054800000L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000L, active1, 0x100000000L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000L, active1, 0x2042a002980L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0xb0000430000L, active1, 0x200000000L, active2, 0x1L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000000L, active1, 0x12080000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x100001000000L, active1, 0x80000800400008L, active2, 0L);
      case 111:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(3, 11, 519);
         else if ((active0 & 0x1000L) != 0L)
         {
            jjmatchedKind = 12;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x8000L, active1, 0x2004802080000000L, active2, 0L);
      case 113:
         return jjMoveStringLiteralDfa4_0(active0, 0x40000000000L, active1, 0L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4821001001000000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000000L, active1, 0x300100000008000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000L, active1, 0L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x80L, active1, 0L, active2, 0L);
      case 121:
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 10;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x2000L) != 0L)
         {
            jjmatchedKind = 13;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L, active1, 0x400000020000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(2, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1, active2);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(4, 14);
         else if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(4, 15);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(4, 50);
         else if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x100000L) != 0L)
            return jjStopAtPos(4, 84);
         else if ((active1 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 110, 281);
         else if ((active1 & 0x4000000000000L) != 0L)
            return jjStopAtPos(4, 114);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x13c0000000020008L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000L, active1, 0x4411080400000000L, active2, 0L);
      case 98:
         return jjMoveStringLiteralDfa5_0(active0, 0x30000L, active1, 0L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000L, active1, 0x40000L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000L, active1, 0x410000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, 0x112000000L, active1, 0x82202022a000000L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x100000000L, active2, 0L);
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000L, active1, 0x800000000L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x5600L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x280200080L, active1, 0x1002980L, active2, 0L);
      case 107:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x8000000000000000L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x8008000040L, active1, 0x8000000000000L, active2, 0L);
      case 109:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2000000000L, active2, 0L);
      case 110:
         if ((active0 & 0x100000L) != 0L)
         {
            jjmatchedKind = 20;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active0, 0x4404000000L, active1, 0x500d4000004L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x30000800000L, active1, 0x1000000000L, active2, 0L);
      case 112:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2000800000000000L, active2, 0L);
      case 113:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x800000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000L, active1, 0x200000000000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x300L, active1, 0x100000000000L, active2, 0x1L);
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000L, active1, 0x80000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(3, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1, active2);
      return 5;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 5;
         }
         else if ((active1 & 0x400000L) != 0L)
            return jjStopAtPos(5, 86);
         else if ((active1 & 0x2000000000L) != 0L)
            return jjStopAtPos(5, 101);
         else if ((active1 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 106;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000L, active1, 0x820000054005604L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000L, active1, 0x20a000000000000L, active2, 0L);
      case 98:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x8L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa6_0(active0, 0x2200000L, active1, 0x2980L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x8004000000L, active1, 0x10000020000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000340L, active1, 0x8040000900010000L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000L, active1, 0L, active2, 0L);
      case 103:
         return jjMoveStringLiteralDfa6_0(active0, 0x80000000000L, active1, 0x1000000L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000L, active1, 0L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x40000030000L, active1, 0x1000000000000000L, active2, 0x1L);
      case 108:
         return jjMoveStringLiteralDfa6_0(active0, 0x1000000L, active1, 0x4001000200000000L, active2, 0L);
      case 109:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa6_0(active0, 0x30200080000L, active1, 0x40002042a000000L, active2, 0L);
      case 113:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000L, active1, 0L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x80L, active1, 0x80000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x80000000L, active1, 0x180080000000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x2090a00000000000L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000L, active1, 0x840000L, active2, 0L);
      case 119:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x100000000000000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(4, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1, active2);
      return 6;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(6, 22);
         else if ((active1 & 0x1000000000L) != 0L)
            return jjStopAtPos(6, 100);
         else if ((active1 & 0x10000000000L) != 0L)
            return jjStopAtPos(6, 104);
         else if ((active1 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active0, 0x800000L, active1, 0x40010002a000000L, active2, 0L);
      case 43:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x4001000000000000L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x30000000000L, active1, 0L, active2, 0x1L);
      case 98:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x4L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000L, active1, 0x100000000L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x200000000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x80001000080L, active1, 0x130000000020008L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x10000L, active2, 0L);
      case 103:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x401000000L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000L, active1, 0x80000000002980L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x400000000L, active1, 0x2800800054805600L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa7_0(active0, 0x4000000L, active1, 0L, active2, 0L);
      case 109:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000000000L, active1, 0L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x1200000000000000L, active2, 0L);
      case 113:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x40000000000000L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000000L, active1, 0x40000L, active2, 0L);
      case 115:
         if ((active0 & 0x40L) != 0L)
         {
            jjmatchedKind = 6;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active0, 0x8218000300L, active1, 0x2200800080000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa7_0(active0, 0x82030000L, active1, 0x8080000000000L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000000L, active1, 0x80000000L, active2, 0L);
      case 121:
         if ((active1 & 0x8000000000000000L) != 0L)
            return jjStopAtPos(6, 127);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(5, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1, active2);
      return 7;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 7;
         }
         else if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(7, 27);
         else if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(7, 39);
         else if ((active1 & 0x8L) != 0L)
            return jjStopAtPos(7, 67);
         else if ((active1 & 0x800000000L) != 0L)
            return jjStopAtPos(7, 99);
         else if ((active1 & 0x1000000000000L) != 0L)
            return jjStopAtPos(7, 112);
         else if ((active1 & 0x4000000000000000L) != 0L)
            return jjStopAtPos(7, 126);
         return jjMoveStringLiteralDfa8_0(active0, 0x300L, active1, 0x200200000082980L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x10000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa8_0(active0, 0x140004080000L, active1, 0x8000401000004L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x20000L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0x100000000L, active1, 0x48000002a000000L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa8_0(active0, 0x30000000000L, active1, 0x100000000000000L, active2, 0x1L);
      case 109:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x100080000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000L, active1, 0x800000000000000L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x2000800000000000L, active2, 0L);
      case 113:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x20000000000000L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x80000000000L, active1, 0x800000L, active2, 0L);
      case 115:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(7, 7, 520);
         else if ((active0 & 0x10000L) != 0L)
         {
            jjmatchedKind = 16;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active0, 0x83020000L, active1, 0x1010080200045600L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa8_0(active0, 0x210800000L, active1, 0x2000154000000L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x40000000000000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(6, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1, active2);
      return 8;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x20000L) != 0L)
            return jjStopAtPos(8, 17);
         else if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(8, 24);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(8, 25);
         else if ((active0 & 0x10000000000L) != 0L)
            return jjStopAtPos(8, 40);
         else if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 41, 281);
         else if ((active1 & 0x4L) != 0L)
            return jjStopAtPos(8, 66);
         else if ((active1 & 0x200000000L) != 0L)
            return jjStopAtPos(8, 97);
         return jjMoveStringLiteralDfa9_0(active0, 0x90080000L, active1, 0x12080044045600L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa9_0(active0, 0x200000000L, active1, 0x20000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x80800000L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x240000000082980L, active2, 0x1L);
      case 108:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x100000000000000L, active2, 0L);
      case 109:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x200000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x2400800000000000L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x100000000000L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x1000000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa9_0(active0, 0x1c0404000000L, active1, 0x888000510000000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x300L, active1, 0x100000002a000000L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x20000000010000L, active2, 0L);
      case 118:
         return jjMoveStringLiteralDfa9_0(active0, 0x100000000L, active1, 0L, active2, 0L);
      case 121:
         return jjMoveStringLiteralDfa9_0(active0, 0x800000L, active1, 0L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(7, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1, active2);
      return 9;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x4000000L) != 0L)
            return jjStopAtPos(9, 26);
         else if ((active0 & 0x40000000000L) != 0L)
            return jjStopAtPos(9, 42);
         else if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(9, 43);
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(9, 44);
         else if ((active1 & 0x100000000L) != 0L)
            return jjStopAtPos(9, 96);
         else if ((active1 & 0x400000000L) != 0L)
            return jjStopAtPos(9, 98);
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x188000032000000L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa10_0(active0, 0x100000000L, active1, 0x3000800000000000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x44000000L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x80000L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x20000000041400L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x10000L, active2, 0L);
      case 109:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x80000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa10_0(active0, 0x200000000L, active1, 0x200000000000000L, active2, 0L);
      case 111:
         if ((active0 & 0x100L) != 0L)
         {
            jjmatchedKind = 8;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active0, 0x90080200L, active1, 0x2200000000000L, active2, 0L);
      case 112:
         return jjMoveStringLiteralDfa10_0(active0, 0x800000L, active1, 0L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x100000000000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x400000089802980L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa10_0(active0, 0x400000000L, active1, 0x810000000004200L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x20000L, active2, 0L);
      case 118:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x40000000000000L, active2, 0L);
      case 122:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0L, active2, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(8, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, active1, active2);
      return 10;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(10, 9);
         else if ((active1 & 0x80000L) != 0L)
            return jjStopAtPos(10, 83);
         else if ((active1 & 0x800000L) != 0L)
            return jjStopAtPos(10, 87);
         else if ((active1 & 0x1000000L) != 0L)
            return jjStopAtPos(10, 88);
         else if ((active1 & 0x80000000L) != 0L)
            return jjStopAtPos(10, 95);
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x8002980L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa11_0(active0, 0x400000000L, active1, 0x940000000000000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa11_0(active0, 0x200000000L, active1, 0L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa11_0(active0, 0x800000L, active1, 0x100022000000L, active2, 0x1L);
      case 102:
         if ((active0 & 0x80000L) != 0L)
            return jjStopAtPos(10, 19);
         else if ((active0 & 0x80000000L) != 0L)
            return jjStopAtPos(10, 31);
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x40000L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x4200L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa11_0(active0, 0x100000000L, active1, 0x2000800000020000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x10000000L, active1, 0x1002000044001400L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x90080000000000L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x200000000000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x200000010000000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x408000000010000L, active2, 0L);
      case 118:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x20000000000000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa11_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(9, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, active1, active2);
      return 11;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(11, 23);
         else if ((active1 & 0x40000L) != 0L)
            return jjStopAtPos(11, 82);
         else if ((active1 & 0x800000000000L) != 0L)
            return jjStopAtPos(11, 111);
         else if ((active1 & 0x10000000000000L) != 0L)
            return jjStopAtPos(11, 116);
         else if ((active1 & 0x2000000000000000L) != 0L)
            return jjStopAtPos(11, 125);
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x100000000000L, active2, 0L);
      case 46:
         if ((active1 & 0x10000L) != 0L)
            return jjStopAtPos(11, 80);
         break;
      case 97:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x420000000000000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x1000000000000000L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x4000000L, active2, 0x1L);
      case 101:
         return jjMoveStringLiteralDfa12_0(active0, 0x310000000L, active1, 0x2200000004200L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x1d00L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x40000000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa12_0(active0, 0x400000000L, active1, 0x800000022000000L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x8000000000000L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x80080000000000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x100000008000000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x200000050022080L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa12_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(10, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, active1, active2);
      return 12;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(12, 28);
         else if ((active1 & 0x2000000000000L) != 0L)
            return jjStopAtPos(12, 113);
         else if ((active1 & 0x8000000000000L) != 0L)
            return jjStopAtPos(12, 115);
         else if ((active1 & 0x100000000000000L) != 0L)
            return jjStopAtPos(12, 120);
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x200000004200L, active2, 0x1L);
      case 46:
         if ((active1 & 0x20000L) != 0L)
            return jjStopAtPos(12, 81);
         break;
      case 97:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x200000010000000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa13_0(active0, 0x400000000L, active1, 0x800000000000000L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x80000002000000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x1040080040000000L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x2080L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x20000000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa13_0(active0, 0x100000000L, active1, 0x400000000000900L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa13_0(active0, 0x200000000L, active1, 0x4000000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x100028001400L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa13_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(11, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, active1, active2);
      return 13;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa14_0(active0, 0x200000000L, active1, 0x80000000000L, active2, 0L);
      case 46:
         if ((active1 & 0x4000000L) != 0L)
            return jjStopAtPos(13, 90);
         break;
      case 97:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x8000000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x400000000000000L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x4200L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa14_0(active0, 0x400000000L, active1, 0x8a0000020002080L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x100000000000L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x1d00L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x240000000000000L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x40000000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x1000000002000000L, active2, 0L);
      case 116:
         if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(13, 32);
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x200010000000L, active2, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa14_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(12, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, active1, active2);
      return 14;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa15_0(active0, 0x400000000L, active1, 0x1000000000002080L, active2, 0L);
      case 46:
         if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(14, 89);
         break;
      case 97:
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x100000001400L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x200000000000000L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x400000010004200L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x200000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x20000000000000L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa15_0(active0, 0x200000000L, active1, 0L, active2, 0x1L);
      case 114:
         if ((active1 & 0x80000000000000L) != 0L)
            return jjStopAtPos(14, 119);
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x20000000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x800000040000000L, active2, 0L);
      case 116:
         if ((active1 & 0x40000000000000L) != 0L)
            return jjStopAtPos(14, 118);
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x80008000900L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa15_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(13, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, active1, active2);
      return 15;
   }
   switch(curChar)
   {
      case 32:
         if ((active1 & 0x40000000L) != 0L)
            return jjStopAtPos(15, 94);
         else if ((active2 & 0x1L) != 0L)
            return jjStopAtPos(15, 128);
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0xc00000010000000L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x200000000000L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x2080L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x200000008000000L, active2, 0L);
      case 102:
         if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(15, 33);
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x4200L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x80000000000L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x900L, active2, 0L);
      case 108:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 15;
         }
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x400L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x100000000000L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa16_0(active0, 0x400000000L, active1, 0x1000000000000000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x20000000L, active2, 0L);
      case 116:
         if ((active1 & 0x20000000000000L) != 0L)
            return jjStopAtPos(15, 117);
         break;
      default :
         break;
   }
   return jjStartNfa_0(14, active0, active1, active2);
}
private final int jjMoveStringLiteralDfa16_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(14, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0, active1, 0L);
      return 16;
   }
   switch(curChar)
   {
      case 32:
         if ((active1 & 0x20000000L) != 0L)
            return jjStopAtPos(16, 93);
         else if ((active1 & 0x100000000000L) != 0L)
            return jjStopAtPos(16, 108);
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0x200000008000000L);
      case 44:
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0x400L);
      case 97:
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0x80000004b00L);
      case 99:
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0x10000000L);
      case 101:
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0x2080L);
      case 102:
         if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(16, 34);
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0x1000000000000000L);
      case 110:
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0x200000000000L);
      case 111:
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0xc00000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(15, active0, active1, 0L);
}
private final int jjMoveStringLiteralDfa17_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(15, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, 0L, active1, 0L);
      return 17;
   }
   switch(curChar)
   {
      case 32:
         if ((active1 & 0x400L) != 0L)
            return jjStopAtPos(17, 74);
         else if ((active1 & 0x200000000000L) != 0L)
            return jjStopAtPos(17, 109);
         else if ((active1 & 0x1000000000000000L) != 0L)
            return jjStopAtPos(17, 124);
         break;
      case 99:
         return jjMoveStringLiteralDfa18_0(active1, 0x8000000L);
      case 102:
         return jjMoveStringLiteralDfa18_0(active1, 0xc00000000002080L);
      case 104:
         return jjMoveStringLiteralDfa18_0(active1, 0x10000000L);
      case 108:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 17;
         }
         return jjMoveStringLiteralDfa18_0(active1, 0x100L);
      case 110:
         return jjMoveStringLiteralDfa18_0(active1, 0x80000000000L);
      case 111:
         return jjMoveStringLiteralDfa18_0(active1, 0x200000000000000L);
      case 117:
         return jjMoveStringLiteralDfa18_0(active1, 0x4200L);
      default :
         break;
   }
   return jjStartNfa_0(16, 0L, active1, 0L);
}
private final int jjMoveStringLiteralDfa18_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(16, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(17, 0L, active1, 0L);
      return 18;
   }
   switch(curChar)
   {
      case 32:
         if ((active1 & 0x80000000000L) != 0L)
            return jjStopAtPos(18, 107);
         else if ((active1 & 0x400000000000000L) != 0L)
            return jjStopAtPos(18, 122);
         else if ((active1 & 0x800000000000000L) != 0L)
            return jjStopAtPos(18, 123);
         break;
      case 44:
         return jjMoveStringLiteralDfa19_0(active1, 0x100L);
      case 97:
         return jjMoveStringLiteralDfa19_0(active1, 0x10002080L);
      case 102:
         return jjMoveStringLiteralDfa19_0(active1, 0x200000000000000L);
      case 104:
         return jjMoveStringLiteralDfa19_0(active1, 0x8000000L);
      case 108:
         return jjMoveStringLiteralDfa19_0(active1, 0x4200L);
      default :
         break;
   }
   return jjStartNfa_0(17, 0L, active1, 0L);
}
private final int jjMoveStringLiteralDfa19_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(17, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(18, 0L, active1, 0L);
      return 19;
   }
   switch(curChar)
   {
      case 32:
         if ((active1 & 0x100L) != 0L)
            return jjStopAtPos(19, 72);
         else if ((active1 & 0x200000000000000L) != 0L)
            return jjStopAtPos(19, 121);
         break;
      case 97:
         return jjMoveStringLiteralDfa20_0(active1, 0x8000000L);
      case 110:
         return jjMoveStringLiteralDfa20_0(active1, 0x10000000L);
      case 116:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 19;
         }
         return jjMoveStringLiteralDfa20_0(active1, 0x200L);
      case 117:
         return jjMoveStringLiteralDfa20_0(active1, 0x2080L);
      default :
         break;
   }
   return jjStartNfa_0(18, 0L, active1, 0L);
}
private final int jjMoveStringLiteralDfa20_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(18, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(19, 0L, active1, 0L);
      return 20;
   }
   switch(curChar)
   {
      case 44:
         return jjMoveStringLiteralDfa21_0(active1, 0x200L);
      case 103:
         return jjMoveStringLiteralDfa21_0(active1, 0x10000000L);
      case 108:
         return jjMoveStringLiteralDfa21_0(active1, 0x2080L);
      case 110:
         return jjMoveStringLiteralDfa21_0(active1, 0x8000000L);
      default :
         break;
   }
   return jjStartNfa_0(19, 0L, active1, 0L);
}
private final int jjMoveStringLiteralDfa21_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(19, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(20, 0L, active1, 0L);
      return 21;
   }
   switch(curChar)
   {
      case 32:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(21, 73);
         break;
      case 101:
         return jjMoveStringLiteralDfa22_0(active1, 0x10000000L);
      case 103:
         return jjMoveStringLiteralDfa22_0(active1, 0x8000000L);
      case 116:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 21;
         }
         return jjMoveStringLiteralDfa22_0(active1, 0x80L);
      default :
         break;
   }
   return jjStartNfa_0(20, 0L, active1, 0L);
}
private final int jjMoveStringLiteralDfa22_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(20, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(21, 0L, active1, 0L);
      return 22;
   }
   switch(curChar)
   {
      case 44:
         return jjMoveStringLiteralDfa23_0(active1, 0x80L);
      case 101:
         return jjMoveStringLiteralDfa23_0(active1, 0x8000000L);
      case 115:
         return jjMoveStringLiteralDfa23_0(active1, 0x10000000L);
      default :
         break;
   }
   return jjStartNfa_0(21, 0L, active1, 0L);
}
private final int jjMoveStringLiteralDfa23_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(21, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(22, 0L, active1, 0L);
      return 23;
   }
   switch(curChar)
   {
      case 32:
         if ((active1 & 0x80L) != 0L)
            return jjStopAtPos(23, 71);
         break;
      case 46:
         if ((active1 & 0x10000000L) != 0L)
            return jjStopAtPos(23, 92);
         break;
      case 115:
         return jjMoveStringLiteralDfa24_0(active1, 0x8000000L);
      default :
         break;
   }
   return jjStartNfa_0(22, 0L, active1, 0L);
}
private final int jjMoveStringLiteralDfa24_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(22, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(23, 0L, active1, 0L);
      return 24;
   }
   switch(curChar)
   {
      case 46:
         if ((active1 & 0x8000000L) != 0L)
            return jjStopAtPos(24, 91);
         break;
      default :
         break;
   }
   return jjStartNfa_0(23, 0L, active1, 0L);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
static final long[] jjbitVec0 = {
   0x1ff00000fffffffeL, 0xffffffffffffc000L, 0xffffffffL, 0x600000000000000L
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0x0L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec3 = {
   0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec4 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffL, 0x0L
};
static final long[] jjbitVec5 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x0L, 0x0L
};
static final long[] jjbitVec6 = {
   0x3fffffffffffL, 0x0L, 0x0L, 0x0L
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 519;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 519:
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(284);
                  }
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 281;
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(283);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(279, 280);
                  break;
               case 501:
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(284);
                  }
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 516;
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(283);
                  }
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 506;
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(279, 280);
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 281;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 520:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 521:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 51)
                        kind = 51;
                     jjCheckNAddTwoStates(0, 2);
                  }
                  else if (curChar == 32)
                     jjAddStates(0, 10);
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 51)
                        kind = 51;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 320:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 466;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 426;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 402;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 373;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 362;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 334;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 498:
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(284);
                  }
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 513;
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(283);
                  }
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 510;
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(279, 280);
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 281;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 272;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 233;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 210;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 182;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 171;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 144;
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 0:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(11, 13);
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddTwoStates(0, 2);
                  break;
               case 20:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 50:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 70:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 145:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 154:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 158:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 172:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 183:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 193:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 197:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 211:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 221:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 225:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 234:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 244:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 248:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 263:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 273:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(276);
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(277);
                  break;
               case 279:
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(279, 280);
                  break;
               case 280:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAddTwoStates(280, 282);
                  break;
               case 283:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(283);
                  break;
               case 284:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjCheckNAdd(284);
                  break;
               case 312:
                  if (curChar == 32)
                     jjAddStates(0, 10);
                  break;
               case 335:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 345:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 349:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 363:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 374:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 385:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 389:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 403:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 414:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 418:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 427:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 438:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 442:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 457:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if (curChar == 44)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 467:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 500:
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(500, 280);
                  break;
               case 503:
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(503, 280);
                  break;
               case 505:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 506;
                  break;
               case 507:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 509:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 511:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 512:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 514:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 515:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 517:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjstateSet[jjnewStateCnt++] = 517;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 319:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 465;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 401;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 372;
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 425;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 361;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 333;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 519:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(284);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(283);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(279, 280);
                  break;
               case 501:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(284);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(283);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(279, 280);
                  break;
               case 40:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 520:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 474:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 486;
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 521:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  if (curChar == 114)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  break;
               case 321:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 467;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 427;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 403;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 374;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 363;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 335;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 9:
                  if ((0x7fffffeL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAddStates(14, 17);
                  }
                  else if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAddTwoStates(276, 277);
                  }
                  if (curChar == 65)
                     jjAddStates(18, 23);
                  else if (curChar == 100)
                     jjAddStates(24, 27);
                  else if (curChar == 115)
                     jjAddStates(28, 31);
                  else if (curChar == 105)
                     jjAddStates(32, 39);
                  else if (curChar == 112)
                     jjAddStates(40, 42);
                  else if (curChar == 121)
                     jjAddStates(43, 44);
                  else if (curChar == 104)
                     jjAddStates(45, 46);
                  else if (curChar == 109)
                     jjAddStates(47, 52);
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 40;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 31;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 11:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  if (curChar == 97)
                     jjCheckNAdd(10);
                  break;
               case 12:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 322:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 495;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 487;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 468;
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 481;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 474;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 428;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 404;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 375;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 364;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 336;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 103:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 115;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 107;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 54:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 82;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 78;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 73;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 62;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 58;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 122:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 273;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 121;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 234;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 211;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 183;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 172;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 145;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 130:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 271;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 209;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 181;
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 232;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 170;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 143;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 498:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(284);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(283);
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(279, 280);
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 515;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 505;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 499:
                  if ((0x7fffffeL & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(514);
                  }
                  if ((0x7fffffeL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(511);
                  }
                  if ((0x7fffffeL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAddTwoStates(280, 282);
                  }
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(500, 280);
                  break;
               case 121:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 502:
                  if ((0x7fffffeL & l) != 0L)
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(517);
                  }
                  if ((0x7fffffeL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(507);
                  }
                  if ((0x7fffffeL & l) != 0L)
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAddTwoStates(280, 282);
                  }
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(503, 280);
                  break;
               case 131:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  break;
               case 87:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                     jjCheckNAdd(277);
                  }
                  if ((0x7fffffe80000000L & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAdd(276);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 89;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 3:
                  if (curChar == 110 && kind > 53)
                     kind = 53;
                  break;
               case 4:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 10:
                  if (curChar == 114 && kind > 53)
                     kind = 53;
                  break;
               case 13:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
               case 118:
                  if (curChar == 101)
                     jjCheckNAdd(10);
                  break;
               case 15:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 21:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 103 && kind > 53)
                     kind = 53;
                  break;
               case 30:
               case 289:
                  if (curChar == 110)
                     jjCheckNAdd(29);
                  break;
               case 31:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 116 && kind > 53)
                     kind = 53;
                  break;
               case 34:
                  if (curChar == 97)
                     jjCheckNAdd(33);
                  break;
               case 35:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 101 && kind > 53)
                     kind = 53;
                  break;
               case 39:
                  if (curChar == 109)
                     jjCheckNAdd(38);
                  break;
               case 41:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if (curChar == 109)
                     jjAddStates(47, 52);
                  break;
               case 43:
                  if (curChar == 115 && kind > 63)
                     kind = 63;
                  break;
               case 44:
                  if (curChar == 100)
                     jjCheckNAdd(43);
                  break;
               case 45:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 51:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 55:
                  if (curChar == 101)
                     jjCheckNAdd(43);
                  break;
               case 56:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 104)
                     jjCheckNAdd(43);
                  break;
               case 61:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 100 && kind > 63)
                     kind = 63;
                  break;
               case 65:
               case 293:
                  if (curChar == 110)
                     jjCheckNAdd(64);
                  break;
               case 66:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 71:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 101 && kind > 63)
                     kind = 63;
                  break;
               case 76:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 104 && kind > 63)
                     kind = 63;
                  break;
               case 81:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 104)
                     jjAddStates(45, 46);
                  break;
               case 85:
               case 92:
                  if (curChar == 114)
                     jjCheckNAdd(43);
                  break;
               case 86:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 88:
                  if (curChar == 114 && kind > 63)
                     kind = 63;
                  break;
               case 89:
                  if (curChar == 117)
                     jjCheckNAdd(88);
                  break;
               case 90:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 121)
                     jjAddStates(43, 44);
                  break;
               case 93:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 97)
                     jjCheckNAdd(88);
                  break;
               case 96:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 112)
                     jjAddStates(40, 42);
                  break;
               case 98:
                  if (curChar == 101 && kind > 54)
                     kind = 54;
                  break;
               case 99:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 104:
                  if (curChar == 99 && kind > 54)
                     kind = 54;
                  break;
               case 105:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 100 && kind > 54)
                     kind = 54;
                  break;
               case 110:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 105)
                     jjAddStates(32, 39);
                  break;
               case 119:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 123:
                  if (curChar == 108 && kind > 61)
                     kind = 61;
                  break;
               case 124:
               case 133:
               case 147:
               case 313:
               case 323:
               case 338:
                  if (curChar == 97)
                     jjCheckNAdd(123);
                  break;
               case 125:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 132:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 134:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 146:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 148:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 155:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 159:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 173:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 116 && kind > 61)
                     kind = 61;
                  break;
               case 175:
               case 185:
               case 213:
               case 236:
               case 366:
               case 377:
               case 406:
               case 430:
                  if (curChar == 110)
                     jjCheckNAdd(174);
                  break;
               case 176:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 184:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 186:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 194:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 198:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 212:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 214:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 222:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 226:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 235:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 237:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 245:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 250:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 265:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 274:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if ((0x7fffffe00000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(276, 277);
                  break;
               case 276:
                  if ((0x7fffffe80000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(276);
                  break;
               case 277:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(277);
                  break;
               case 278:
                  if ((0x7fffffeL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAddStates(14, 17);
                  break;
               case 279:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(279, 280);
                  break;
               case 281:
                  if ((0x7fffffeL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAddTwoStates(280, 282);
                  break;
               case 282:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAddTwoStates(280, 282);
                  break;
               case 283:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(283);
                  break;
               case 284:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjCheckNAdd(284);
                  break;
               case 285:
                  if (curChar == 115)
                     jjAddStates(28, 31);
                  break;
               case 286:
                  if (curChar == 114)
                     jjCheckNAdd(33);
                  break;
               case 287:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 290:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 294:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 295:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 110 && kind > 63)
                     kind = 63;
                  break;
               case 298:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if (curChar == 100)
                     jjAddStates(24, 27);
                  break;
               case 302:
                  if (curChar == 108)
                     jjCheckNAdd(38);
                  break;
               case 303:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if (curChar == 116)
                     jjCheckNAdd(38);
                  break;
               case 307:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if (curChar == 121)
                     jjCheckNAdd(43);
                  break;
               case 309:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if (curChar == 121 && kind > 63)
                     kind = 63;
                  break;
               case 311:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 314:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 317:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 324:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 334:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 336:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 339:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 346:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 350:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 351:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 358:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 364:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 367:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 375:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 378:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 382:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 386:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 388:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 390:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 402:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 404:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 407:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 408:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 409:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 415:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 417:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 419:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 423:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 428:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 429:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 431:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 432:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 433:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 437:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 439:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 444:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 450:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 451:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 453:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 455:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 459:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 461:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 465:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 466:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 468:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if (curChar == 116 && kind > 62)
                     kind = 62;
                  break;
               case 471:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 475:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 476:
                  if (curChar == 115 && kind > 62)
                     kind = 62;
                  break;
               case 477:
                  if (curChar == 115)
                     jjCheckNAdd(476);
                  break;
               case 478:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 482:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 483:
                  if (curChar == 116)
                     jjCheckNAdd(476);
                  break;
               case 484:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 485:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 487:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 488:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 489:
                  if (curChar == 101)
                     jjCheckNAdd(476);
                  break;
               case 490:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 491:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 492:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 493:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 495:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 496:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 497:
                  if (curChar == 65)
                     jjAddStates(18, 23);
                  break;
               case 500:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(500, 280);
                  break;
               case 503:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(503, 280);
                  break;
               case 504:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 506:
                  if ((0x7fffffeL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(507);
                  break;
               case 507:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(507);
                  break;
               case 508:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 510:
                  if ((0x7fffffeL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(511);
                  break;
               case 511:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(511);
                  break;
               case 513:
                  if ((0x7fffffeL & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjCheckNAdd(514);
                  break;
               case 514:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjCheckNAdd(514);
                  break;
               case 516:
                  if ((0x7fffffeL & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjCheckNAdd(517);
                  break;
               case 517:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjCheckNAdd(517);
                  break;
               case 518:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 519:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(279, 280);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(283);
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(284);
                  }
                  break;
               case 501:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(279, 280);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(283);
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(284);
                  }
                  break;
               case 498:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(279, 280);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 57)
                        kind = 57;
                     jjCheckNAdd(283);
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 58)
                        kind = 58;
                     jjCheckNAdd(284);
                  }
                  break;
               case 279:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(279, 280);
                  break;
               case 282:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAddTwoStates(280, 282);
                  break;
               case 283:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(283);
                  break;
               case 284:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjCheckNAdd(284);
                  break;
               case 500:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(500, 280);
                  break;
               case 503:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(503, 280);
                  break;
               case 507:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 511:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 514:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 517:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjstateSet[jjnewStateCnt++] = 517;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 519 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   322, 337, 365, 376, 405, 429, 469, 475, 482, 488, 496, 0, 2, 1, 279, 280, 
   283, 284, 498, 504, 508, 509, 512, 518, 305, 307, 309, 311, 288, 292, 296, 300, 
   122, 132, 146, 173, 184, 212, 235, 274, 103, 108, 116, 94, 96, 87, 90, 54, 
   59, 63, 74, 79, 83, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec3[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec4[i2] & l2) != 0L);
      case 51:
         return ((jjbitVec5[i2] & l2) != 0L);
      case 61:
         return ((jjbitVec6[i2] & l2) != 0L);
      default : 
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\141\156\144", "\150\141\156\144\154\145\163", 
"\162\145\161\165\151\162\145\163", "\162\145\154\141\164\145\163\40\164\157", 
"\162\145\154\141\164\145\163\40\164\157\40", "\115\141\156\171", "\132\145\162\157", "\172\145\162\157", 
"\155\141\156\171", "\155\141\156\171\40", "\172\145\162\157\40", 
"\145\170\150\151\142\151\164\163", "\145\170\150\151\142\151\164\163\40", "\151\163\40", 
"\151\156\163\164\141\156\143\145\40\157\146", "\151\163\40\141\156", "\54\40\167\150\151\143\150\40", 
"\40\167\150\151\143\150\40", "\40\151\163\40\157\146\40\164\171\160\145\40", 
"\40\150\141\156\144\154\145\163\40", "\40\141\146\146\145\143\164\163\40", "\54\40\150\141\156\144\154\145\163\40", 
"\150\141\156\144\154\145\163\40", "\141\164\40\154\145\141\163\164\40\157\156\145\40", "\101\40\40", 
"\101\156\40\40", "\143\157\156\163\151\163\164\163\40\157\146", 
"\141\162\145\40\145\161\165\151\166\141\154\145\156\164", "\141\162\145\40\151\156\163\164\141\156\143\145\163\40\157\146", 
"\151\163\40\141\156\40\151\156\163\164\141\156\143\145\40\157\146", "\141", "\141\156\40", "\40", "\151\163\40\141\156\40", 
"\40\171\151\145\154\144\163\40", "\157\160\164\151\157\156\141\154\40", "\117\160\164\151\157\156\141\154\40", 
"\40\162\145\161\165\151\162\145\163\40", "\40\164\162\151\147\147\145\162\163\40", 
"\40\143\157\156\163\165\155\145\163\40", "\40\157\162\40", "\157\162", "\157\162\40", "\141\40", "\143\141\156\40", 
"\151\163\40\141\40", null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\56", "\40\151\163\40", "\54\40\143\141\156\40\142\145\40", 
"\40\143\141\156\40\142\145\40", "\54", "\141\54\40", "\54\40", 
"\54\40\167\150\151\143\150\40\151\163\40\164\150\145\40\144\145\146\141\165\154\164\54\40", "\54\40\167\150\151\143\150\40\151\163\40\151\156\151\164\151\141\154\54\40", 
"\167\150\151\143\150\40\151\163\40\164\150\145\40\144\145\146\141\165\154\164\54\40", "\167\150\151\143\150\40\151\163\40\151\156\151\164\151\141\154\54\40", 
"\54\40\167\150\151\143\150\40\151\163\40\151\156\151\164\151\141\154", "\167\150\151\143\150\40\151\163\40\151\156\151\164\151\141\154", 
"\54\40\167\150\151\143\150\40\151\163\40\164\150\145\40\144\145\146\141\165\154\164", 
"\167\150\151\143\150\40\151\163\40\164\150\145\40\144\145\146\141\165\154\164", "\54\40\151\163\40", "\40\142\171\40\144\145\146\141\165\154\164\56", 
"\141\40\142\171\40\144\145\146\141\165\154\164\56", "\54\40\157\143\143\165\162\163\40\151\146\40", 
"\40\157\143\143\165\162\163\40\151\146\40", "\40\141\156\144\40", "\141\156\144\40", "\54\40\141\156\144\40", 
"\54\40\162\145\161\165\151\162\145\163\40", "\54\40\164\162\151\147\147\145\162\163\40", 
"\54\40\167\150\145\156\40\151\164\40\145\156\144\163\56", "\40\167\150\145\156\40\151\164\40\145\156\144\163\56", 
"\54\40\167\150\145\156\40\151\164\163\40\163\164\141\164\145\40\143\150\141\156\147\145\163\56", 
"\40\167\150\145\156\40\151\164\163\40\163\164\141\164\145\40\143\150\141\156\147\145\163\56", "\54\40\167\150\145\156\40\151\164\40\145\156\164\145\162\163\40", 
"\40\167\150\145\156\40\151\164\40\145\156\164\145\162\163\40", "\54\40\143\157\156\163\165\155\145\163\40", 
"\54\40\141\146\146\145\143\164\163\40", "\54\40\171\151\145\154\144\163\40", "\54\40\143\150\141\156\147\145\163\40", 
"\143\150\141\156\147\145\163\40", "\54\40\146\162\157\155\40", "\40\146\162\157\155\40", "\40\164\157\40", 
"\164\157\40", "\141\54\40\141\156\144\40", "\54\40\167\150\145\156\40", 
"\40\167\150\145\156\40", "\151\164\40\154\141\163\164\163\40\155\157\162\145\40\164\150\141\156\40", 
"\40\154\141\163\164\163\40\155\157\162\145\40\164\150\141\156\40", "\141\40\154\141\163\164\163\40\155\157\162\145\40\164\150\141\156\40", 
"\115\141\156\171\40", "\101\156\40\157\160\164\151\157\156\141\154\40", 
"\120\154\165\162\141\154\53\40", "\101\164\40\154\145\141\163\164\40\157\156\145\40", "\54\40\164\157\40", 
"\54\40\162\145\154\141\164\145\163\40\164\157\40", "\40\162\145\154\141\164\145\163\40\164\157\40", 
"\54\40\141\162\145\40\145\161\165\151\166\141\154\145\156\164", "\40\141\162\145\40\145\161\165\151\166\141\154\145\156\164", 
"\54\40\151\156\40\164\150\151\163\40\157\162\144\145\162", "\54\40\141\163\40\167\145\154\154\40\141\163\40", 
"\54\40\151\163\40\141\156\40\151\156\163\164\141\156\143\145\40\157\146\40", "\40\151\163\40\141\156\40\151\156\163\164\141\156\143\145\40\157\146\40", 
"\54\40\141\162\145\40\151\156\163\164\141\156\143\145\163\40\157\146\40", "\40\141\162\145\40\151\156\163\164\141\156\143\145\163\40\157\146\40", 
"\141\156\40\157\160\164\151\157\156\141\154\40", "\160\154\165\162\141\154\53\40", "\40\151\163\40\153\145\171", 
"\40\151\156\151\164\151\141\154\151\172\145\144\40\164\157\40", };
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = {
   0xe7efffffffffffe1L, 0xffffffffffffffffL, 0x1L, 
};
static final long[] jjtoSkip = {
   0x1eL, 0x0L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[519];
private final int[] jjstateSet = new int[1038];
protected char curChar;
public OplParserTokenManager(SimpleCharStream stream)
{
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public OplParserTokenManager(SimpleCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 519; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 13 && (0x3600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

}
